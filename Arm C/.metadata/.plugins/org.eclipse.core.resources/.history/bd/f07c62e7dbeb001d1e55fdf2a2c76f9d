/**
  ******************************************************************************
  * @file    main.c
  * @author  Auto-generated by STM32CubeIDE
  * @version V1.0
  * @brief   Default main function.
  * V159: trình bày Struct dưới dạng Assembly
  * V160: 2 cách sử dụng typedef vơi struct
  ******************************************************************************
*/

#include<stdio.h>

struct DataSet
{
	char  data1 ;
	int   data2 ;
	char  data3 ;
	short data4 ;
}__attribute__((packed)); //Un-Aligned Storage: ko dùng bộ nhớ đệm khi sử dụng struct
//=> Việc dùng Un-Aligned Storage có thể giảm kích thước file nhưng có thể làm ảnh hưởng đến
//hiệu suất của ứng dùng do trình biên dịch sẽ cần nhiều lệnh hơn để đọc ghi các giá trị
//khi ko dùng bộ đệm.


struct DataSet data ; //this consumes 12 bytes in memory(RAM)

//C1: khai báo typedef trực tiếp trong struct
//typedef struct
//{
//	unsigned int carNumber;
//	uint32_t carPrice;
//	uint16_t carMaxSpeed;
//	float carWeight;
//}CarModel_t;    //thêm _t: để phân biệt struct ko sử dụng typedef
//--> CarModel_t carBWM,carFord;


//C2: khai báo typedef sau khi đã tạo struct
//struct CarModel
//{
//	unsigned int carNumber;
//	uint32_t carPrice;
//	uint16_t carMaxSpeed;
//	float carWeight;
//};
//typedef struct CarModel CarModel;
//--> CarModel carBWM,carFord;

//Lưu ý 1: không được phép khai báo thành phần con là struct trùng với struct mẹ
//vd:
//struct CarModel
//{
//	unsigned int carNumber;
//	uint32_t carPrice;
//	uint16_t carMaxSpeed;
//	float carWeight;
//  struct CarModel carBWM;   //không được phép
//};

//Lưu ý 2: được phép khai báo thành phần con là con trỏ struct với struct mẹ
//vd:
//struct CarModel
//{
//	unsigned int carNumber;
//	uint32_t carPrice;
//	uint16_t carMaxSpeed;
//	float carWeight;
//  struct CarModel *carBWM;   //được phép
//};

//Lưu ý 3: được phép khai báo thành phần con là một struct khác với struct mẹ.
//thường thì ta nên tạo 1 typedef của struct con đó sau đó mới khai báo ở struct mẹ
//vd:
//struct CarModel
//{
//	unsigned int carNumber;
//	uint32_t carPrice;
//	uint16_t carMaxSpeed;
//	float carWeight;
//  struct
//	{
//		char data5;
//		int data6;
//	}moreData;
//};

int main(void)
{

	data.data1 = 0xAA;
	data.data2 = 0xFFFFEEEE;
	data.data3 = 0x55;
	data.data4 = 0xA5A5;

	printf("data.data1 = %d\n",data.data1);
	printf("data.data2 = %d\n",data.data2);
	printf("data.data3 = %d\n",data.data3);
	printf("data.data4 = %d\n",data.data4);

	for(;;);
}
