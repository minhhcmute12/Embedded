
07_Volatile.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001228  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000004c  080013d8  080013d8  000113d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001424  08001424  00020074  2**0
                  CONTENTS
  4 .ARM          00000000  08001424  08001424  00020074  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001424  08001424  00020074  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001424  08001424  00011424  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001428  08001428  00011428  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000074  20000000  0800142c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020074  2**0
                  CONTENTS
 10 .bss          00000174  20000074  20000074  00020074  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200001e8  200001e8  00020074  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00020074  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  0002009e  2**0
                  CONTENTS, READONLY
 14 .debug_info   00000a2f  00000000  00000000  000200e1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 00000359  00000000  00000000  00020b10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000128  00000000  00000000  00020e70  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 000000ca  00000000  00000000  00020f98  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00002c89  00000000  00000000  00021062  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   0000148f  00000000  00000000  00023ceb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    00009809  00000000  00000000  0002517a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00000b44  00000000  00000000  0002e984  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000055  00000000  00000000  0002f4c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000074 	.word	0x20000074
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080013c0 	.word	0x080013c0

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000078 	.word	0x20000078
 80001ec:	080013c0 	.word	0x080013c0

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000290:	b480      	push	{r7}
 8000292:	b083      	sub	sp, #12
 8000294:	af00      	add	r7, sp, #0
 8000296:	4603      	mov	r3, r0
 8000298:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 800029a:	4b0e      	ldr	r3, [pc, #56]	; (80002d4 <ITM_SendChar+0x44>)
 800029c:	681b      	ldr	r3, [r3, #0]
 800029e:	4a0d      	ldr	r2, [pc, #52]	; (80002d4 <ITM_SendChar+0x44>)
 80002a0:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80002a4:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80002a6:	4b0c      	ldr	r3, [pc, #48]	; (80002d8 <ITM_SendChar+0x48>)
 80002a8:	681b      	ldr	r3, [r3, #0]
 80002aa:	4a0b      	ldr	r2, [pc, #44]	; (80002d8 <ITM_SendChar+0x48>)
 80002ac:	f043 0301 	orr.w	r3, r3, #1
 80002b0:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80002b2:	bf00      	nop
 80002b4:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002b8:	681b      	ldr	r3, [r3, #0]
 80002ba:	f003 0301 	and.w	r3, r3, #1
 80002be:	2b00      	cmp	r3, #0
 80002c0:	d0f8      	beq.n	80002b4 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80002c2:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80002c6:	79fb      	ldrb	r3, [r7, #7]
 80002c8:	6013      	str	r3, [r2, #0]
}
 80002ca:	bf00      	nop
 80002cc:	370c      	adds	r7, #12
 80002ce:	46bd      	mov	sp, r7
 80002d0:	bc80      	pop	{r7}
 80002d2:	4770      	bx	lr
 80002d4:	e000edfc 	.word	0xe000edfc
 80002d8:	e0000e00 	.word	0xe0000e00

080002dc <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002dc:	b580      	push	{r7, lr}
 80002de:	b086      	sub	sp, #24
 80002e0:	af00      	add	r7, sp, #0
 80002e2:	60f8      	str	r0, [r7, #12]
 80002e4:	60b9      	str	r1, [r7, #8]
 80002e6:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002e8:	2300      	movs	r3, #0
 80002ea:	617b      	str	r3, [r7, #20]
 80002ec:	e00a      	b.n	8000304 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80002ee:	f3af 8000 	nop.w
 80002f2:	4601      	mov	r1, r0
 80002f4:	68bb      	ldr	r3, [r7, #8]
 80002f6:	1c5a      	adds	r2, r3, #1
 80002f8:	60ba      	str	r2, [r7, #8]
 80002fa:	b2ca      	uxtb	r2, r1
 80002fc:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002fe:	697b      	ldr	r3, [r7, #20]
 8000300:	3301      	adds	r3, #1
 8000302:	617b      	str	r3, [r7, #20]
 8000304:	697a      	ldr	r2, [r7, #20]
 8000306:	687b      	ldr	r3, [r7, #4]
 8000308:	429a      	cmp	r2, r3
 800030a:	dbf0      	blt.n	80002ee <_read+0x12>
	}

return len;
 800030c:	687b      	ldr	r3, [r7, #4]
}
 800030e:	4618      	mov	r0, r3
 8000310:	3718      	adds	r7, #24
 8000312:	46bd      	mov	sp, r7
 8000314:	bd80      	pop	{r7, pc}

08000316 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000316:	b580      	push	{r7, lr}
 8000318:	b086      	sub	sp, #24
 800031a:	af00      	add	r7, sp, #0
 800031c:	60f8      	str	r0, [r7, #12]
 800031e:	60b9      	str	r1, [r7, #8]
 8000320:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000322:	2300      	movs	r3, #0
 8000324:	617b      	str	r3, [r7, #20]
 8000326:	e009      	b.n	800033c <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 8000328:	68bb      	ldr	r3, [r7, #8]
 800032a:	1c5a      	adds	r2, r3, #1
 800032c:	60ba      	str	r2, [r7, #8]
 800032e:	781b      	ldrb	r3, [r3, #0]
 8000330:	4618      	mov	r0, r3
 8000332:	f7ff ffad 	bl	8000290 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000336:	697b      	ldr	r3, [r7, #20]
 8000338:	3301      	adds	r3, #1
 800033a:	617b      	str	r3, [r7, #20]
 800033c:	697a      	ldr	r2, [r7, #20]
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	429a      	cmp	r2, r3
 8000342:	dbf1      	blt.n	8000328 <_write+0x12>
	}
	return len;
 8000344:	687b      	ldr	r3, [r7, #4]
}
 8000346:	4618      	mov	r0, r3
 8000348:	3718      	adds	r7, #24
 800034a:	46bd      	mov	sp, r7
 800034c:	bd80      	pop	{r7, pc}

0800034e <_close>:

int _close(int file)
{
 800034e:	b480      	push	{r7}
 8000350:	b083      	sub	sp, #12
 8000352:	af00      	add	r7, sp, #0
 8000354:	6078      	str	r0, [r7, #4]
	return -1;
 8000356:	f04f 33ff 	mov.w	r3, #4294967295
}
 800035a:	4618      	mov	r0, r3
 800035c:	370c      	adds	r7, #12
 800035e:	46bd      	mov	sp, r7
 8000360:	bc80      	pop	{r7}
 8000362:	4770      	bx	lr

08000364 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000364:	b480      	push	{r7}
 8000366:	b083      	sub	sp, #12
 8000368:	af00      	add	r7, sp, #0
 800036a:	6078      	str	r0, [r7, #4]
 800036c:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 800036e:	683b      	ldr	r3, [r7, #0]
 8000370:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000374:	605a      	str	r2, [r3, #4]
	return 0;
 8000376:	2300      	movs	r3, #0
}
 8000378:	4618      	mov	r0, r3
 800037a:	370c      	adds	r7, #12
 800037c:	46bd      	mov	sp, r7
 800037e:	bc80      	pop	{r7}
 8000380:	4770      	bx	lr

08000382 <_isatty>:

int _isatty(int file)
{
 8000382:	b480      	push	{r7}
 8000384:	b083      	sub	sp, #12
 8000386:	af00      	add	r7, sp, #0
 8000388:	6078      	str	r0, [r7, #4]
	return 1;
 800038a:	2301      	movs	r3, #1
}
 800038c:	4618      	mov	r0, r3
 800038e:	370c      	adds	r7, #12
 8000390:	46bd      	mov	sp, r7
 8000392:	bc80      	pop	{r7}
 8000394:	4770      	bx	lr

08000396 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000396:	b480      	push	{r7}
 8000398:	b085      	sub	sp, #20
 800039a:	af00      	add	r7, sp, #0
 800039c:	60f8      	str	r0, [r7, #12]
 800039e:	60b9      	str	r1, [r7, #8]
 80003a0:	607a      	str	r2, [r7, #4]
	return 0;
 80003a2:	2300      	movs	r3, #0
}
 80003a4:	4618      	mov	r0, r3
 80003a6:	3714      	adds	r7, #20
 80003a8:	46bd      	mov	sp, r7
 80003aa:	bc80      	pop	{r7}
 80003ac:	4770      	bx	lr
	...

080003b0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003b0:	b580      	push	{r7, lr}
 80003b2:	b086      	sub	sp, #24
 80003b4:	af00      	add	r7, sp, #0
 80003b6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003b8:	4a14      	ldr	r2, [pc, #80]	; (800040c <_sbrk+0x5c>)
 80003ba:	4b15      	ldr	r3, [pc, #84]	; (8000410 <_sbrk+0x60>)
 80003bc:	1ad3      	subs	r3, r2, r3
 80003be:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003c0:	697b      	ldr	r3, [r7, #20]
 80003c2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003c4:	4b13      	ldr	r3, [pc, #76]	; (8000414 <_sbrk+0x64>)
 80003c6:	681b      	ldr	r3, [r3, #0]
 80003c8:	2b00      	cmp	r3, #0
 80003ca:	d102      	bne.n	80003d2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003cc:	4b11      	ldr	r3, [pc, #68]	; (8000414 <_sbrk+0x64>)
 80003ce:	4a12      	ldr	r2, [pc, #72]	; (8000418 <_sbrk+0x68>)
 80003d0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003d2:	4b10      	ldr	r3, [pc, #64]	; (8000414 <_sbrk+0x64>)
 80003d4:	681a      	ldr	r2, [r3, #0]
 80003d6:	687b      	ldr	r3, [r7, #4]
 80003d8:	4413      	add	r3, r2
 80003da:	693a      	ldr	r2, [r7, #16]
 80003dc:	429a      	cmp	r2, r3
 80003de:	d207      	bcs.n	80003f0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003e0:	f000 fa26 	bl	8000830 <__errno>
 80003e4:	4603      	mov	r3, r0
 80003e6:	220c      	movs	r2, #12
 80003e8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80003ea:	f04f 33ff 	mov.w	r3, #4294967295
 80003ee:	e009      	b.n	8000404 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80003f0:	4b08      	ldr	r3, [pc, #32]	; (8000414 <_sbrk+0x64>)
 80003f2:	681b      	ldr	r3, [r3, #0]
 80003f4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80003f6:	4b07      	ldr	r3, [pc, #28]	; (8000414 <_sbrk+0x64>)
 80003f8:	681a      	ldr	r2, [r3, #0]
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	4413      	add	r3, r2
 80003fe:	4a05      	ldr	r2, [pc, #20]	; (8000414 <_sbrk+0x64>)
 8000400:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000402:	68fb      	ldr	r3, [r7, #12]
}
 8000404:	4618      	mov	r0, r3
 8000406:	3718      	adds	r7, #24
 8000408:	46bd      	mov	sp, r7
 800040a:	bd80      	pop	{r7, pc}
 800040c:	20020000 	.word	0x20020000
 8000410:	00000400 	.word	0x00000400
 8000414:	20000090 	.word	0x20000090
 8000418:	200001e8 	.word	0x200001e8

0800041c <main>:
uint32_t volatile *pEXTIMaskReg 			= (uint32_t*) (0x40013C00 + 0x00);
uint32_t volatile *pEXTTIEdgeCtrlReg		= (uint32_t*) (0x40013C00 + 0x08);
uint32_t volatile *pNVICIRQEnReg 			= (uint32_t*) 0xE000E100;

int main(void)
{
 800041c:	b580      	push	{r7, lr}
 800041e:	b082      	sub	sp, #8
 8000420:	af00      	add	r7, sp, #0
	button_init();   //hàm cấu hình chân ngắt GPIOA
 8000422:	f000 f839 	bl	8000498 <button_init>

	while(1)
	{
		//Disable interrupt  //tắt chế độ cho phép sử dụng ngắt thanh ghi pEXTIMaskReg
		*pEXTIMaskReg &= ~( 1 << 0);
 8000426:	4b17      	ldr	r3, [pc, #92]	; (8000484 <main+0x68>)
 8000428:	681b      	ldr	r3, [r3, #0]
 800042a:	681a      	ldr	r2, [r3, #0]
 800042c:	4b15      	ldr	r3, [pc, #84]	; (8000484 <main+0x68>)
 800042e:	681b      	ldr	r3, [r3, #0]
 8000430:	f022 0201 	bic.w	r2, r2, #1
 8000434:	601a      	str	r2, [r3, #0]

		if(g_button_pressed){   //nếu có nút đc cấu hình ngắt được nhấn
 8000436:	4b14      	ldr	r3, [pc, #80]	; (8000488 <main+0x6c>)
 8000438:	781b      	ldrb	r3, [r3, #0]
 800043a:	b2db      	uxtb	r3, r3
 800043c:	2b00      	cmp	r3, #0
 800043e:	d017      	beq.n	8000470 <main+0x54>

			//Some delay until button debouncing gets over
			for(uint32_t volatile i=0;i<500000/2;i++);  //delay chương trình
 8000440:	2300      	movs	r3, #0
 8000442:	607b      	str	r3, [r7, #4]
 8000444:	e002      	b.n	800044c <main+0x30>
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	3301      	adds	r3, #1
 800044a:	607b      	str	r3, [r7, #4]
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	4a0f      	ldr	r2, [pc, #60]	; (800048c <main+0x70>)
 8000450:	4293      	cmp	r3, r2
 8000452:	d9f8      	bls.n	8000446 <main+0x2a>

			g_button_press_count++;  //tăng biến counter
 8000454:	4b0e      	ldr	r3, [pc, #56]	; (8000490 <main+0x74>)
 8000456:	681b      	ldr	r3, [r3, #0]
 8000458:	3301      	adds	r3, #1
 800045a:	4a0d      	ldr	r2, [pc, #52]	; (8000490 <main+0x74>)
 800045c:	6013      	str	r3, [r2, #0]

			printf("Button is pressed : %lu\n",g_button_press_count); //in value biến counter
 800045e:	4b0c      	ldr	r3, [pc, #48]	; (8000490 <main+0x74>)
 8000460:	681b      	ldr	r3, [r3, #0]
 8000462:	4619      	mov	r1, r3
 8000464:	480b      	ldr	r0, [pc, #44]	; (8000494 <main+0x78>)
 8000466:	f000 f93f 	bl	80006e8 <iprintf>

			g_button_pressed = 0;	//reset lại giá trị biến ngắt, ko còn đc nhấn
 800046a:	4b07      	ldr	r3, [pc, #28]	; (8000488 <main+0x6c>)
 800046c:	2200      	movs	r2, #0
 800046e:	701a      	strb	r2, [r3, #0]
		}

		//Enable interrupt //bật chế độ cho phép sử dụng ngắt thanh ghi pEXTIMaskReg
		*pEXTIMaskReg |= ( 1 << 0);
 8000470:	4b04      	ldr	r3, [pc, #16]	; (8000484 <main+0x68>)
 8000472:	681b      	ldr	r3, [r3, #0]
 8000474:	681a      	ldr	r2, [r3, #0]
 8000476:	4b03      	ldr	r3, [pc, #12]	; (8000484 <main+0x68>)
 8000478:	681b      	ldr	r3, [r3, #0]
 800047a:	f042 0201 	orr.w	r2, r2, #1
 800047e:	601a      	str	r2, [r3, #0]
		*pEXTIMaskReg &= ~( 1 << 0);
 8000480:	e7d1      	b.n	8000426 <main+0xa>
 8000482:	bf00      	nop
 8000484:	2000000c 	.word	0x2000000c
 8000488:	20000094 	.word	0x20000094
 800048c:	0003d08f 	.word	0x0003d08f
 8000490:	20000098 	.word	0x20000098
 8000494:	080013d8 	.word	0x080013d8

08000498 <button_init>:
	//khai báo dùng 'volatile')
}

//Cấu hình địa chỉ thanh ghi cho nút nhấn
void button_init(void)
{
 8000498:	b480      	push	{r7}
 800049a:	af00      	add	r7, sp, #0
  //GPIOA clock enable
  *pClkCtrlReg |= ( 1 << 0);
 800049c:	4b15      	ldr	r3, [pc, #84]	; (80004f4 <button_init+0x5c>)
 800049e:	681b      	ldr	r3, [r3, #0]
 80004a0:	681a      	ldr	r2, [r3, #0]
 80004a2:	4b14      	ldr	r3, [pc, #80]	; (80004f4 <button_init+0x5c>)
 80004a4:	681b      	ldr	r3, [r3, #0]
 80004a6:	f042 0201 	orr.w	r2, r2, #1
 80004aa:	601a      	str	r2, [r3, #0]

  //Syscfg clock enable
  *pClkCtrlRegApb2 |= ( 1 << 14);
 80004ac:	4b12      	ldr	r3, [pc, #72]	; (80004f8 <button_init+0x60>)
 80004ae:	681b      	ldr	r3, [r3, #0]
 80004b0:	681a      	ldr	r2, [r3, #0]
 80004b2:	4b11      	ldr	r3, [pc, #68]	; (80004f8 <button_init+0x60>)
 80004b4:	681b      	ldr	r3, [r3, #0]
 80004b6:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80004ba:	601a      	str	r2, [r3, #0]

  //Edge detection configuration - Cấu hình phát hiện cạnh xung lên là nhấn
  *pEXTTIEdgeCtrlReg |= ( 1 << 0);
 80004bc:	4b0f      	ldr	r3, [pc, #60]	; (80004fc <button_init+0x64>)
 80004be:	681b      	ldr	r3, [r3, #0]
 80004c0:	681a      	ldr	r2, [r3, #0]
 80004c2:	4b0e      	ldr	r3, [pc, #56]	; (80004fc <button_init+0x64>)
 80004c4:	681b      	ldr	r3, [r3, #0]
 80004c6:	f042 0201 	orr.w	r2, r2, #1
 80004ca:	601a      	str	r2, [r3, #0]

  //EXTI interrupt enable
  *pEXTIMaskReg |= ( 1 << 0);
 80004cc:	4b0c      	ldr	r3, [pc, #48]	; (8000500 <button_init+0x68>)
 80004ce:	681b      	ldr	r3, [r3, #0]
 80004d0:	681a      	ldr	r2, [r3, #0]
 80004d2:	4b0b      	ldr	r3, [pc, #44]	; (8000500 <button_init+0x68>)
 80004d4:	681b      	ldr	r3, [r3, #0]
 80004d6:	f042 0201 	orr.w	r2, r2, #1
 80004da:	601a      	str	r2, [r3, #0]
  //KO cần phải kích hoạt bit tương ứng của EXTI0 trên Pending Register vì bit0 sẽ tự động set lên 1
  //nếu như EXTI0 đc set lên 1

  //NVIC irq enable
  *pNVICIRQEnReg |= ( 1 << 6);
 80004dc:	4b09      	ldr	r3, [pc, #36]	; (8000504 <button_init+0x6c>)
 80004de:	681b      	ldr	r3, [r3, #0]
 80004e0:	681a      	ldr	r2, [r3, #0]
 80004e2:	4b08      	ldr	r3, [pc, #32]	; (8000504 <button_init+0x6c>)
 80004e4:	681b      	ldr	r3, [r3, #0]
 80004e6:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80004ea:	601a      	str	r2, [r3, #0]
}
 80004ec:	bf00      	nop
 80004ee:	46bd      	mov	sp, r7
 80004f0:	bc80      	pop	{r7}
 80004f2:	4770      	bx	lr
 80004f4:	20000004 	.word	0x20000004
 80004f8:	20000008 	.word	0x20000008
 80004fc:	20000010 	.word	0x20000010
 8000500:	2000000c 	.word	0x2000000c
 8000504:	20000014 	.word	0x20000014

08000508 <EXTI0_IRQHandler>:

/* This is button interrupt handler-Hàm xử lý nút nhấn ngắt_interrupt thông qua EXTI0*/
void EXTI0_IRQHandler(void)
{
 8000508:	b480      	push	{r7}
 800050a:	af00      	add	r7, sp, #0
	//Make this flag SET . if button pressed
	g_button_pressed = 1;  //lưu giá trị để biết đang đc nhấn
 800050c:	4b07      	ldr	r3, [pc, #28]	; (800052c <EXTI0_IRQHandler+0x24>)
 800050e:	2201      	movs	r2, #1
 8000510:	701a      	strb	r2, [r3, #0]

	//Clearing of EXTI interrupt peding bit - xóa bit tương ứng bên trong Pending register
	*pEXTTIPendReg |= ( 1 << 0);
 8000512:	4b07      	ldr	r3, [pc, #28]	; (8000530 <EXTI0_IRQHandler+0x28>)
 8000514:	681b      	ldr	r3, [r3, #0]
 8000516:	681a      	ldr	r2, [r3, #0]
 8000518:	4b05      	ldr	r3, [pc, #20]	; (8000530 <EXTI0_IRQHandler+0x28>)
 800051a:	681b      	ldr	r3, [r3, #0]
 800051c:	f042 0201 	orr.w	r2, r2, #1
 8000520:	601a      	str	r2, [r3, #0]
}
 8000522:	bf00      	nop
 8000524:	46bd      	mov	sp, r7
 8000526:	bc80      	pop	{r7}
 8000528:	4770      	bx	lr
 800052a:	bf00      	nop
 800052c:	20000094 	.word	0x20000094
 8000530:	20000000 	.word	0x20000000

08000534 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000534:	480d      	ldr	r0, [pc, #52]	; (800056c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000536:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000538:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800053c:	480c      	ldr	r0, [pc, #48]	; (8000570 <LoopForever+0x6>)
  ldr r1, =_edata
 800053e:	490d      	ldr	r1, [pc, #52]	; (8000574 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000540:	4a0d      	ldr	r2, [pc, #52]	; (8000578 <LoopForever+0xe>)
  movs r3, #0
 8000542:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000544:	e002      	b.n	800054c <LoopCopyDataInit>

08000546 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000546:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000548:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800054a:	3304      	adds	r3, #4

0800054c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800054c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800054e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000550:	d3f9      	bcc.n	8000546 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000552:	4a0a      	ldr	r2, [pc, #40]	; (800057c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000554:	4c0a      	ldr	r4, [pc, #40]	; (8000580 <LoopForever+0x16>)
  movs r3, #0
 8000556:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000558:	e001      	b.n	800055e <LoopFillZerobss>

0800055a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800055a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800055c:	3204      	adds	r2, #4

0800055e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800055e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000560:	d3fb      	bcc.n	800055a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000562:	f000 f96b 	bl	800083c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000566:	f7ff ff59 	bl	800041c <main>

0800056a <LoopForever>:

LoopForever:
  b LoopForever
 800056a:	e7fe      	b.n	800056a <LoopForever>
  ldr   r0, =_estack
 800056c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000570:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000574:	20000074 	.word	0x20000074
  ldr r2, =_sidata
 8000578:	0800142c 	.word	0x0800142c
  ldr r2, =_sbss
 800057c:	20000074 	.word	0x20000074
  ldr r4, =_ebss
 8000580:	200001e8 	.word	0x200001e8

08000584 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000584:	e7fe      	b.n	8000584 <ADC_IRQHandler>
	...

08000588 <std>:
 8000588:	2300      	movs	r3, #0
 800058a:	b510      	push	{r4, lr}
 800058c:	4604      	mov	r4, r0
 800058e:	e9c0 3300 	strd	r3, r3, [r0]
 8000592:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000596:	6083      	str	r3, [r0, #8]
 8000598:	8181      	strh	r1, [r0, #12]
 800059a:	6643      	str	r3, [r0, #100]	; 0x64
 800059c:	81c2      	strh	r2, [r0, #14]
 800059e:	6183      	str	r3, [r0, #24]
 80005a0:	4619      	mov	r1, r3
 80005a2:	2208      	movs	r2, #8
 80005a4:	305c      	adds	r0, #92	; 0x5c
 80005a6:	f000 f8f4 	bl	8000792 <memset>
 80005aa:	4b05      	ldr	r3, [pc, #20]	; (80005c0 <std+0x38>)
 80005ac:	6263      	str	r3, [r4, #36]	; 0x24
 80005ae:	4b05      	ldr	r3, [pc, #20]	; (80005c4 <std+0x3c>)
 80005b0:	62a3      	str	r3, [r4, #40]	; 0x28
 80005b2:	4b05      	ldr	r3, [pc, #20]	; (80005c8 <std+0x40>)
 80005b4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80005b6:	4b05      	ldr	r3, [pc, #20]	; (80005cc <std+0x44>)
 80005b8:	6224      	str	r4, [r4, #32]
 80005ba:	6323      	str	r3, [r4, #48]	; 0x30
 80005bc:	bd10      	pop	{r4, pc}
 80005be:	bf00      	nop
 80005c0:	0800070d 	.word	0x0800070d
 80005c4:	0800072f 	.word	0x0800072f
 80005c8:	08000767 	.word	0x08000767
 80005cc:	0800078b 	.word	0x0800078b

080005d0 <stdio_exit_handler>:
 80005d0:	4a02      	ldr	r2, [pc, #8]	; (80005dc <stdio_exit_handler+0xc>)
 80005d2:	4903      	ldr	r1, [pc, #12]	; (80005e0 <stdio_exit_handler+0x10>)
 80005d4:	4803      	ldr	r0, [pc, #12]	; (80005e4 <stdio_exit_handler+0x14>)
 80005d6:	f000 b869 	b.w	80006ac <_fwalk_sglue>
 80005da:	bf00      	nop
 80005dc:	20000018 	.word	0x20000018
 80005e0:	0800111d 	.word	0x0800111d
 80005e4:	20000024 	.word	0x20000024

080005e8 <cleanup_stdio>:
 80005e8:	6841      	ldr	r1, [r0, #4]
 80005ea:	4b0c      	ldr	r3, [pc, #48]	; (800061c <cleanup_stdio+0x34>)
 80005ec:	4299      	cmp	r1, r3
 80005ee:	b510      	push	{r4, lr}
 80005f0:	4604      	mov	r4, r0
 80005f2:	d001      	beq.n	80005f8 <cleanup_stdio+0x10>
 80005f4:	f000 fd92 	bl	800111c <_fflush_r>
 80005f8:	68a1      	ldr	r1, [r4, #8]
 80005fa:	4b09      	ldr	r3, [pc, #36]	; (8000620 <cleanup_stdio+0x38>)
 80005fc:	4299      	cmp	r1, r3
 80005fe:	d002      	beq.n	8000606 <cleanup_stdio+0x1e>
 8000600:	4620      	mov	r0, r4
 8000602:	f000 fd8b 	bl	800111c <_fflush_r>
 8000606:	68e1      	ldr	r1, [r4, #12]
 8000608:	4b06      	ldr	r3, [pc, #24]	; (8000624 <cleanup_stdio+0x3c>)
 800060a:	4299      	cmp	r1, r3
 800060c:	d004      	beq.n	8000618 <cleanup_stdio+0x30>
 800060e:	4620      	mov	r0, r4
 8000610:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000614:	f000 bd82 	b.w	800111c <_fflush_r>
 8000618:	bd10      	pop	{r4, pc}
 800061a:	bf00      	nop
 800061c:	2000009c 	.word	0x2000009c
 8000620:	20000104 	.word	0x20000104
 8000624:	2000016c 	.word	0x2000016c

08000628 <global_stdio_init.part.0>:
 8000628:	b510      	push	{r4, lr}
 800062a:	4b0b      	ldr	r3, [pc, #44]	; (8000658 <global_stdio_init.part.0+0x30>)
 800062c:	4c0b      	ldr	r4, [pc, #44]	; (800065c <global_stdio_init.part.0+0x34>)
 800062e:	4a0c      	ldr	r2, [pc, #48]	; (8000660 <global_stdio_init.part.0+0x38>)
 8000630:	601a      	str	r2, [r3, #0]
 8000632:	4620      	mov	r0, r4
 8000634:	2200      	movs	r2, #0
 8000636:	2104      	movs	r1, #4
 8000638:	f7ff ffa6 	bl	8000588 <std>
 800063c:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8000640:	2201      	movs	r2, #1
 8000642:	2109      	movs	r1, #9
 8000644:	f7ff ffa0 	bl	8000588 <std>
 8000648:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 800064c:	2202      	movs	r2, #2
 800064e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000652:	2112      	movs	r1, #18
 8000654:	f7ff bf98 	b.w	8000588 <std>
 8000658:	200001d4 	.word	0x200001d4
 800065c:	2000009c 	.word	0x2000009c
 8000660:	080005d1 	.word	0x080005d1

08000664 <__sfp_lock_acquire>:
 8000664:	4801      	ldr	r0, [pc, #4]	; (800066c <__sfp_lock_acquire+0x8>)
 8000666:	f000 b90d 	b.w	8000884 <__retarget_lock_acquire_recursive>
 800066a:	bf00      	nop
 800066c:	200001dd 	.word	0x200001dd

08000670 <__sfp_lock_release>:
 8000670:	4801      	ldr	r0, [pc, #4]	; (8000678 <__sfp_lock_release+0x8>)
 8000672:	f000 b908 	b.w	8000886 <__retarget_lock_release_recursive>
 8000676:	bf00      	nop
 8000678:	200001dd 	.word	0x200001dd

0800067c <__sinit>:
 800067c:	b510      	push	{r4, lr}
 800067e:	4604      	mov	r4, r0
 8000680:	f7ff fff0 	bl	8000664 <__sfp_lock_acquire>
 8000684:	6a23      	ldr	r3, [r4, #32]
 8000686:	b11b      	cbz	r3, 8000690 <__sinit+0x14>
 8000688:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800068c:	f7ff bff0 	b.w	8000670 <__sfp_lock_release>
 8000690:	4b04      	ldr	r3, [pc, #16]	; (80006a4 <__sinit+0x28>)
 8000692:	6223      	str	r3, [r4, #32]
 8000694:	4b04      	ldr	r3, [pc, #16]	; (80006a8 <__sinit+0x2c>)
 8000696:	681b      	ldr	r3, [r3, #0]
 8000698:	2b00      	cmp	r3, #0
 800069a:	d1f5      	bne.n	8000688 <__sinit+0xc>
 800069c:	f7ff ffc4 	bl	8000628 <global_stdio_init.part.0>
 80006a0:	e7f2      	b.n	8000688 <__sinit+0xc>
 80006a2:	bf00      	nop
 80006a4:	080005e9 	.word	0x080005e9
 80006a8:	200001d4 	.word	0x200001d4

080006ac <_fwalk_sglue>:
 80006ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80006b0:	4607      	mov	r7, r0
 80006b2:	4688      	mov	r8, r1
 80006b4:	4614      	mov	r4, r2
 80006b6:	2600      	movs	r6, #0
 80006b8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80006bc:	f1b9 0901 	subs.w	r9, r9, #1
 80006c0:	d505      	bpl.n	80006ce <_fwalk_sglue+0x22>
 80006c2:	6824      	ldr	r4, [r4, #0]
 80006c4:	2c00      	cmp	r4, #0
 80006c6:	d1f7      	bne.n	80006b8 <_fwalk_sglue+0xc>
 80006c8:	4630      	mov	r0, r6
 80006ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80006ce:	89ab      	ldrh	r3, [r5, #12]
 80006d0:	2b01      	cmp	r3, #1
 80006d2:	d907      	bls.n	80006e4 <_fwalk_sglue+0x38>
 80006d4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80006d8:	3301      	adds	r3, #1
 80006da:	d003      	beq.n	80006e4 <_fwalk_sglue+0x38>
 80006dc:	4629      	mov	r1, r5
 80006de:	4638      	mov	r0, r7
 80006e0:	47c0      	blx	r8
 80006e2:	4306      	orrs	r6, r0
 80006e4:	3568      	adds	r5, #104	; 0x68
 80006e6:	e7e9      	b.n	80006bc <_fwalk_sglue+0x10>

080006e8 <iprintf>:
 80006e8:	b40f      	push	{r0, r1, r2, r3}
 80006ea:	b507      	push	{r0, r1, r2, lr}
 80006ec:	4906      	ldr	r1, [pc, #24]	; (8000708 <iprintf+0x20>)
 80006ee:	ab04      	add	r3, sp, #16
 80006f0:	6808      	ldr	r0, [r1, #0]
 80006f2:	f853 2b04 	ldr.w	r2, [r3], #4
 80006f6:	6881      	ldr	r1, [r0, #8]
 80006f8:	9301      	str	r3, [sp, #4]
 80006fa:	f000 f9e3 	bl	8000ac4 <_vfiprintf_r>
 80006fe:	b003      	add	sp, #12
 8000700:	f85d eb04 	ldr.w	lr, [sp], #4
 8000704:	b004      	add	sp, #16
 8000706:	4770      	bx	lr
 8000708:	20000070 	.word	0x20000070

0800070c <__sread>:
 800070c:	b510      	push	{r4, lr}
 800070e:	460c      	mov	r4, r1
 8000710:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000714:	f000 f868 	bl	80007e8 <_read_r>
 8000718:	2800      	cmp	r0, #0
 800071a:	bfab      	itete	ge
 800071c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800071e:	89a3      	ldrhlt	r3, [r4, #12]
 8000720:	181b      	addge	r3, r3, r0
 8000722:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000726:	bfac      	ite	ge
 8000728:	6563      	strge	r3, [r4, #84]	; 0x54
 800072a:	81a3      	strhlt	r3, [r4, #12]
 800072c:	bd10      	pop	{r4, pc}

0800072e <__swrite>:
 800072e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000732:	461f      	mov	r7, r3
 8000734:	898b      	ldrh	r3, [r1, #12]
 8000736:	05db      	lsls	r3, r3, #23
 8000738:	4605      	mov	r5, r0
 800073a:	460c      	mov	r4, r1
 800073c:	4616      	mov	r6, r2
 800073e:	d505      	bpl.n	800074c <__swrite+0x1e>
 8000740:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000744:	2302      	movs	r3, #2
 8000746:	2200      	movs	r2, #0
 8000748:	f000 f83c 	bl	80007c4 <_lseek_r>
 800074c:	89a3      	ldrh	r3, [r4, #12]
 800074e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000752:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000756:	81a3      	strh	r3, [r4, #12]
 8000758:	4632      	mov	r2, r6
 800075a:	463b      	mov	r3, r7
 800075c:	4628      	mov	r0, r5
 800075e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000762:	f000 b853 	b.w	800080c <_write_r>

08000766 <__sseek>:
 8000766:	b510      	push	{r4, lr}
 8000768:	460c      	mov	r4, r1
 800076a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800076e:	f000 f829 	bl	80007c4 <_lseek_r>
 8000772:	1c43      	adds	r3, r0, #1
 8000774:	89a3      	ldrh	r3, [r4, #12]
 8000776:	bf15      	itete	ne
 8000778:	6560      	strne	r0, [r4, #84]	; 0x54
 800077a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800077e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000782:	81a3      	strheq	r3, [r4, #12]
 8000784:	bf18      	it	ne
 8000786:	81a3      	strhne	r3, [r4, #12]
 8000788:	bd10      	pop	{r4, pc}

0800078a <__sclose>:
 800078a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800078e:	f000 b809 	b.w	80007a4 <_close_r>

08000792 <memset>:
 8000792:	4402      	add	r2, r0
 8000794:	4603      	mov	r3, r0
 8000796:	4293      	cmp	r3, r2
 8000798:	d100      	bne.n	800079c <memset+0xa>
 800079a:	4770      	bx	lr
 800079c:	f803 1b01 	strb.w	r1, [r3], #1
 80007a0:	e7f9      	b.n	8000796 <memset+0x4>
	...

080007a4 <_close_r>:
 80007a4:	b538      	push	{r3, r4, r5, lr}
 80007a6:	4d06      	ldr	r5, [pc, #24]	; (80007c0 <_close_r+0x1c>)
 80007a8:	2300      	movs	r3, #0
 80007aa:	4604      	mov	r4, r0
 80007ac:	4608      	mov	r0, r1
 80007ae:	602b      	str	r3, [r5, #0]
 80007b0:	f7ff fdcd 	bl	800034e <_close>
 80007b4:	1c43      	adds	r3, r0, #1
 80007b6:	d102      	bne.n	80007be <_close_r+0x1a>
 80007b8:	682b      	ldr	r3, [r5, #0]
 80007ba:	b103      	cbz	r3, 80007be <_close_r+0x1a>
 80007bc:	6023      	str	r3, [r4, #0]
 80007be:	bd38      	pop	{r3, r4, r5, pc}
 80007c0:	200001d8 	.word	0x200001d8

080007c4 <_lseek_r>:
 80007c4:	b538      	push	{r3, r4, r5, lr}
 80007c6:	4d07      	ldr	r5, [pc, #28]	; (80007e4 <_lseek_r+0x20>)
 80007c8:	4604      	mov	r4, r0
 80007ca:	4608      	mov	r0, r1
 80007cc:	4611      	mov	r1, r2
 80007ce:	2200      	movs	r2, #0
 80007d0:	602a      	str	r2, [r5, #0]
 80007d2:	461a      	mov	r2, r3
 80007d4:	f7ff fddf 	bl	8000396 <_lseek>
 80007d8:	1c43      	adds	r3, r0, #1
 80007da:	d102      	bne.n	80007e2 <_lseek_r+0x1e>
 80007dc:	682b      	ldr	r3, [r5, #0]
 80007de:	b103      	cbz	r3, 80007e2 <_lseek_r+0x1e>
 80007e0:	6023      	str	r3, [r4, #0]
 80007e2:	bd38      	pop	{r3, r4, r5, pc}
 80007e4:	200001d8 	.word	0x200001d8

080007e8 <_read_r>:
 80007e8:	b538      	push	{r3, r4, r5, lr}
 80007ea:	4d07      	ldr	r5, [pc, #28]	; (8000808 <_read_r+0x20>)
 80007ec:	4604      	mov	r4, r0
 80007ee:	4608      	mov	r0, r1
 80007f0:	4611      	mov	r1, r2
 80007f2:	2200      	movs	r2, #0
 80007f4:	602a      	str	r2, [r5, #0]
 80007f6:	461a      	mov	r2, r3
 80007f8:	f7ff fd70 	bl	80002dc <_read>
 80007fc:	1c43      	adds	r3, r0, #1
 80007fe:	d102      	bne.n	8000806 <_read_r+0x1e>
 8000800:	682b      	ldr	r3, [r5, #0]
 8000802:	b103      	cbz	r3, 8000806 <_read_r+0x1e>
 8000804:	6023      	str	r3, [r4, #0]
 8000806:	bd38      	pop	{r3, r4, r5, pc}
 8000808:	200001d8 	.word	0x200001d8

0800080c <_write_r>:
 800080c:	b538      	push	{r3, r4, r5, lr}
 800080e:	4d07      	ldr	r5, [pc, #28]	; (800082c <_write_r+0x20>)
 8000810:	4604      	mov	r4, r0
 8000812:	4608      	mov	r0, r1
 8000814:	4611      	mov	r1, r2
 8000816:	2200      	movs	r2, #0
 8000818:	602a      	str	r2, [r5, #0]
 800081a:	461a      	mov	r2, r3
 800081c:	f7ff fd7b 	bl	8000316 <_write>
 8000820:	1c43      	adds	r3, r0, #1
 8000822:	d102      	bne.n	800082a <_write_r+0x1e>
 8000824:	682b      	ldr	r3, [r5, #0]
 8000826:	b103      	cbz	r3, 800082a <_write_r+0x1e>
 8000828:	6023      	str	r3, [r4, #0]
 800082a:	bd38      	pop	{r3, r4, r5, pc}
 800082c:	200001d8 	.word	0x200001d8

08000830 <__errno>:
 8000830:	4b01      	ldr	r3, [pc, #4]	; (8000838 <__errno+0x8>)
 8000832:	6818      	ldr	r0, [r3, #0]
 8000834:	4770      	bx	lr
 8000836:	bf00      	nop
 8000838:	20000070 	.word	0x20000070

0800083c <__libc_init_array>:
 800083c:	b570      	push	{r4, r5, r6, lr}
 800083e:	4d0d      	ldr	r5, [pc, #52]	; (8000874 <__libc_init_array+0x38>)
 8000840:	4c0d      	ldr	r4, [pc, #52]	; (8000878 <__libc_init_array+0x3c>)
 8000842:	1b64      	subs	r4, r4, r5
 8000844:	10a4      	asrs	r4, r4, #2
 8000846:	2600      	movs	r6, #0
 8000848:	42a6      	cmp	r6, r4
 800084a:	d109      	bne.n	8000860 <__libc_init_array+0x24>
 800084c:	4d0b      	ldr	r5, [pc, #44]	; (800087c <__libc_init_array+0x40>)
 800084e:	4c0c      	ldr	r4, [pc, #48]	; (8000880 <__libc_init_array+0x44>)
 8000850:	f000 fdb6 	bl	80013c0 <_init>
 8000854:	1b64      	subs	r4, r4, r5
 8000856:	10a4      	asrs	r4, r4, #2
 8000858:	2600      	movs	r6, #0
 800085a:	42a6      	cmp	r6, r4
 800085c:	d105      	bne.n	800086a <__libc_init_array+0x2e>
 800085e:	bd70      	pop	{r4, r5, r6, pc}
 8000860:	f855 3b04 	ldr.w	r3, [r5], #4
 8000864:	4798      	blx	r3
 8000866:	3601      	adds	r6, #1
 8000868:	e7ee      	b.n	8000848 <__libc_init_array+0xc>
 800086a:	f855 3b04 	ldr.w	r3, [r5], #4
 800086e:	4798      	blx	r3
 8000870:	3601      	adds	r6, #1
 8000872:	e7f2      	b.n	800085a <__libc_init_array+0x1e>
 8000874:	08001424 	.word	0x08001424
 8000878:	08001424 	.word	0x08001424
 800087c:	08001424 	.word	0x08001424
 8000880:	08001428 	.word	0x08001428

08000884 <__retarget_lock_acquire_recursive>:
 8000884:	4770      	bx	lr

08000886 <__retarget_lock_release_recursive>:
 8000886:	4770      	bx	lr

08000888 <_free_r>:
 8000888:	b538      	push	{r3, r4, r5, lr}
 800088a:	4605      	mov	r5, r0
 800088c:	2900      	cmp	r1, #0
 800088e:	d041      	beq.n	8000914 <_free_r+0x8c>
 8000890:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000894:	1f0c      	subs	r4, r1, #4
 8000896:	2b00      	cmp	r3, #0
 8000898:	bfb8      	it	lt
 800089a:	18e4      	addlt	r4, r4, r3
 800089c:	f000 f8de 	bl	8000a5c <__malloc_lock>
 80008a0:	4a1d      	ldr	r2, [pc, #116]	; (8000918 <_free_r+0x90>)
 80008a2:	6813      	ldr	r3, [r2, #0]
 80008a4:	b933      	cbnz	r3, 80008b4 <_free_r+0x2c>
 80008a6:	6063      	str	r3, [r4, #4]
 80008a8:	6014      	str	r4, [r2, #0]
 80008aa:	4628      	mov	r0, r5
 80008ac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80008b0:	f000 b8da 	b.w	8000a68 <__malloc_unlock>
 80008b4:	42a3      	cmp	r3, r4
 80008b6:	d908      	bls.n	80008ca <_free_r+0x42>
 80008b8:	6820      	ldr	r0, [r4, #0]
 80008ba:	1821      	adds	r1, r4, r0
 80008bc:	428b      	cmp	r3, r1
 80008be:	bf01      	itttt	eq
 80008c0:	6819      	ldreq	r1, [r3, #0]
 80008c2:	685b      	ldreq	r3, [r3, #4]
 80008c4:	1809      	addeq	r1, r1, r0
 80008c6:	6021      	streq	r1, [r4, #0]
 80008c8:	e7ed      	b.n	80008a6 <_free_r+0x1e>
 80008ca:	461a      	mov	r2, r3
 80008cc:	685b      	ldr	r3, [r3, #4]
 80008ce:	b10b      	cbz	r3, 80008d4 <_free_r+0x4c>
 80008d0:	42a3      	cmp	r3, r4
 80008d2:	d9fa      	bls.n	80008ca <_free_r+0x42>
 80008d4:	6811      	ldr	r1, [r2, #0]
 80008d6:	1850      	adds	r0, r2, r1
 80008d8:	42a0      	cmp	r0, r4
 80008da:	d10b      	bne.n	80008f4 <_free_r+0x6c>
 80008dc:	6820      	ldr	r0, [r4, #0]
 80008de:	4401      	add	r1, r0
 80008e0:	1850      	adds	r0, r2, r1
 80008e2:	4283      	cmp	r3, r0
 80008e4:	6011      	str	r1, [r2, #0]
 80008e6:	d1e0      	bne.n	80008aa <_free_r+0x22>
 80008e8:	6818      	ldr	r0, [r3, #0]
 80008ea:	685b      	ldr	r3, [r3, #4]
 80008ec:	6053      	str	r3, [r2, #4]
 80008ee:	4408      	add	r0, r1
 80008f0:	6010      	str	r0, [r2, #0]
 80008f2:	e7da      	b.n	80008aa <_free_r+0x22>
 80008f4:	d902      	bls.n	80008fc <_free_r+0x74>
 80008f6:	230c      	movs	r3, #12
 80008f8:	602b      	str	r3, [r5, #0]
 80008fa:	e7d6      	b.n	80008aa <_free_r+0x22>
 80008fc:	6820      	ldr	r0, [r4, #0]
 80008fe:	1821      	adds	r1, r4, r0
 8000900:	428b      	cmp	r3, r1
 8000902:	bf04      	itt	eq
 8000904:	6819      	ldreq	r1, [r3, #0]
 8000906:	685b      	ldreq	r3, [r3, #4]
 8000908:	6063      	str	r3, [r4, #4]
 800090a:	bf04      	itt	eq
 800090c:	1809      	addeq	r1, r1, r0
 800090e:	6021      	streq	r1, [r4, #0]
 8000910:	6054      	str	r4, [r2, #4]
 8000912:	e7ca      	b.n	80008aa <_free_r+0x22>
 8000914:	bd38      	pop	{r3, r4, r5, pc}
 8000916:	bf00      	nop
 8000918:	200001e0 	.word	0x200001e0

0800091c <sbrk_aligned>:
 800091c:	b570      	push	{r4, r5, r6, lr}
 800091e:	4e0e      	ldr	r6, [pc, #56]	; (8000958 <sbrk_aligned+0x3c>)
 8000920:	460c      	mov	r4, r1
 8000922:	6831      	ldr	r1, [r6, #0]
 8000924:	4605      	mov	r5, r0
 8000926:	b911      	cbnz	r1, 800092e <sbrk_aligned+0x12>
 8000928:	f000 fcb6 	bl	8001298 <_sbrk_r>
 800092c:	6030      	str	r0, [r6, #0]
 800092e:	4621      	mov	r1, r4
 8000930:	4628      	mov	r0, r5
 8000932:	f000 fcb1 	bl	8001298 <_sbrk_r>
 8000936:	1c43      	adds	r3, r0, #1
 8000938:	d00a      	beq.n	8000950 <sbrk_aligned+0x34>
 800093a:	1cc4      	adds	r4, r0, #3
 800093c:	f024 0403 	bic.w	r4, r4, #3
 8000940:	42a0      	cmp	r0, r4
 8000942:	d007      	beq.n	8000954 <sbrk_aligned+0x38>
 8000944:	1a21      	subs	r1, r4, r0
 8000946:	4628      	mov	r0, r5
 8000948:	f000 fca6 	bl	8001298 <_sbrk_r>
 800094c:	3001      	adds	r0, #1
 800094e:	d101      	bne.n	8000954 <sbrk_aligned+0x38>
 8000950:	f04f 34ff 	mov.w	r4, #4294967295
 8000954:	4620      	mov	r0, r4
 8000956:	bd70      	pop	{r4, r5, r6, pc}
 8000958:	200001e4 	.word	0x200001e4

0800095c <_malloc_r>:
 800095c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000960:	1ccd      	adds	r5, r1, #3
 8000962:	f025 0503 	bic.w	r5, r5, #3
 8000966:	3508      	adds	r5, #8
 8000968:	2d0c      	cmp	r5, #12
 800096a:	bf38      	it	cc
 800096c:	250c      	movcc	r5, #12
 800096e:	2d00      	cmp	r5, #0
 8000970:	4607      	mov	r7, r0
 8000972:	db01      	blt.n	8000978 <_malloc_r+0x1c>
 8000974:	42a9      	cmp	r1, r5
 8000976:	d905      	bls.n	8000984 <_malloc_r+0x28>
 8000978:	230c      	movs	r3, #12
 800097a:	603b      	str	r3, [r7, #0]
 800097c:	2600      	movs	r6, #0
 800097e:	4630      	mov	r0, r6
 8000980:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000984:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000a58 <_malloc_r+0xfc>
 8000988:	f000 f868 	bl	8000a5c <__malloc_lock>
 800098c:	f8d8 3000 	ldr.w	r3, [r8]
 8000990:	461c      	mov	r4, r3
 8000992:	bb5c      	cbnz	r4, 80009ec <_malloc_r+0x90>
 8000994:	4629      	mov	r1, r5
 8000996:	4638      	mov	r0, r7
 8000998:	f7ff ffc0 	bl	800091c <sbrk_aligned>
 800099c:	1c43      	adds	r3, r0, #1
 800099e:	4604      	mov	r4, r0
 80009a0:	d155      	bne.n	8000a4e <_malloc_r+0xf2>
 80009a2:	f8d8 4000 	ldr.w	r4, [r8]
 80009a6:	4626      	mov	r6, r4
 80009a8:	2e00      	cmp	r6, #0
 80009aa:	d145      	bne.n	8000a38 <_malloc_r+0xdc>
 80009ac:	2c00      	cmp	r4, #0
 80009ae:	d048      	beq.n	8000a42 <_malloc_r+0xe6>
 80009b0:	6823      	ldr	r3, [r4, #0]
 80009b2:	4631      	mov	r1, r6
 80009b4:	4638      	mov	r0, r7
 80009b6:	eb04 0903 	add.w	r9, r4, r3
 80009ba:	f000 fc6d 	bl	8001298 <_sbrk_r>
 80009be:	4581      	cmp	r9, r0
 80009c0:	d13f      	bne.n	8000a42 <_malloc_r+0xe6>
 80009c2:	6821      	ldr	r1, [r4, #0]
 80009c4:	1a6d      	subs	r5, r5, r1
 80009c6:	4629      	mov	r1, r5
 80009c8:	4638      	mov	r0, r7
 80009ca:	f7ff ffa7 	bl	800091c <sbrk_aligned>
 80009ce:	3001      	adds	r0, #1
 80009d0:	d037      	beq.n	8000a42 <_malloc_r+0xe6>
 80009d2:	6823      	ldr	r3, [r4, #0]
 80009d4:	442b      	add	r3, r5
 80009d6:	6023      	str	r3, [r4, #0]
 80009d8:	f8d8 3000 	ldr.w	r3, [r8]
 80009dc:	2b00      	cmp	r3, #0
 80009de:	d038      	beq.n	8000a52 <_malloc_r+0xf6>
 80009e0:	685a      	ldr	r2, [r3, #4]
 80009e2:	42a2      	cmp	r2, r4
 80009e4:	d12b      	bne.n	8000a3e <_malloc_r+0xe2>
 80009e6:	2200      	movs	r2, #0
 80009e8:	605a      	str	r2, [r3, #4]
 80009ea:	e00f      	b.n	8000a0c <_malloc_r+0xb0>
 80009ec:	6822      	ldr	r2, [r4, #0]
 80009ee:	1b52      	subs	r2, r2, r5
 80009f0:	d41f      	bmi.n	8000a32 <_malloc_r+0xd6>
 80009f2:	2a0b      	cmp	r2, #11
 80009f4:	d917      	bls.n	8000a26 <_malloc_r+0xca>
 80009f6:	1961      	adds	r1, r4, r5
 80009f8:	42a3      	cmp	r3, r4
 80009fa:	6025      	str	r5, [r4, #0]
 80009fc:	bf18      	it	ne
 80009fe:	6059      	strne	r1, [r3, #4]
 8000a00:	6863      	ldr	r3, [r4, #4]
 8000a02:	bf08      	it	eq
 8000a04:	f8c8 1000 	streq.w	r1, [r8]
 8000a08:	5162      	str	r2, [r4, r5]
 8000a0a:	604b      	str	r3, [r1, #4]
 8000a0c:	4638      	mov	r0, r7
 8000a0e:	f104 060b 	add.w	r6, r4, #11
 8000a12:	f000 f829 	bl	8000a68 <__malloc_unlock>
 8000a16:	f026 0607 	bic.w	r6, r6, #7
 8000a1a:	1d23      	adds	r3, r4, #4
 8000a1c:	1af2      	subs	r2, r6, r3
 8000a1e:	d0ae      	beq.n	800097e <_malloc_r+0x22>
 8000a20:	1b9b      	subs	r3, r3, r6
 8000a22:	50a3      	str	r3, [r4, r2]
 8000a24:	e7ab      	b.n	800097e <_malloc_r+0x22>
 8000a26:	42a3      	cmp	r3, r4
 8000a28:	6862      	ldr	r2, [r4, #4]
 8000a2a:	d1dd      	bne.n	80009e8 <_malloc_r+0x8c>
 8000a2c:	f8c8 2000 	str.w	r2, [r8]
 8000a30:	e7ec      	b.n	8000a0c <_malloc_r+0xb0>
 8000a32:	4623      	mov	r3, r4
 8000a34:	6864      	ldr	r4, [r4, #4]
 8000a36:	e7ac      	b.n	8000992 <_malloc_r+0x36>
 8000a38:	4634      	mov	r4, r6
 8000a3a:	6876      	ldr	r6, [r6, #4]
 8000a3c:	e7b4      	b.n	80009a8 <_malloc_r+0x4c>
 8000a3e:	4613      	mov	r3, r2
 8000a40:	e7cc      	b.n	80009dc <_malloc_r+0x80>
 8000a42:	230c      	movs	r3, #12
 8000a44:	603b      	str	r3, [r7, #0]
 8000a46:	4638      	mov	r0, r7
 8000a48:	f000 f80e 	bl	8000a68 <__malloc_unlock>
 8000a4c:	e797      	b.n	800097e <_malloc_r+0x22>
 8000a4e:	6025      	str	r5, [r4, #0]
 8000a50:	e7dc      	b.n	8000a0c <_malloc_r+0xb0>
 8000a52:	605b      	str	r3, [r3, #4]
 8000a54:	deff      	udf	#255	; 0xff
 8000a56:	bf00      	nop
 8000a58:	200001e0 	.word	0x200001e0

08000a5c <__malloc_lock>:
 8000a5c:	4801      	ldr	r0, [pc, #4]	; (8000a64 <__malloc_lock+0x8>)
 8000a5e:	f7ff bf11 	b.w	8000884 <__retarget_lock_acquire_recursive>
 8000a62:	bf00      	nop
 8000a64:	200001dc 	.word	0x200001dc

08000a68 <__malloc_unlock>:
 8000a68:	4801      	ldr	r0, [pc, #4]	; (8000a70 <__malloc_unlock+0x8>)
 8000a6a:	f7ff bf0c 	b.w	8000886 <__retarget_lock_release_recursive>
 8000a6e:	bf00      	nop
 8000a70:	200001dc 	.word	0x200001dc

08000a74 <__sfputc_r>:
 8000a74:	6893      	ldr	r3, [r2, #8]
 8000a76:	3b01      	subs	r3, #1
 8000a78:	2b00      	cmp	r3, #0
 8000a7a:	b410      	push	{r4}
 8000a7c:	6093      	str	r3, [r2, #8]
 8000a7e:	da07      	bge.n	8000a90 <__sfputc_r+0x1c>
 8000a80:	6994      	ldr	r4, [r2, #24]
 8000a82:	42a3      	cmp	r3, r4
 8000a84:	db01      	blt.n	8000a8a <__sfputc_r+0x16>
 8000a86:	290a      	cmp	r1, #10
 8000a88:	d102      	bne.n	8000a90 <__sfputc_r+0x1c>
 8000a8a:	bc10      	pop	{r4}
 8000a8c:	f000 bb6e 	b.w	800116c <__swbuf_r>
 8000a90:	6813      	ldr	r3, [r2, #0]
 8000a92:	1c58      	adds	r0, r3, #1
 8000a94:	6010      	str	r0, [r2, #0]
 8000a96:	7019      	strb	r1, [r3, #0]
 8000a98:	4608      	mov	r0, r1
 8000a9a:	bc10      	pop	{r4}
 8000a9c:	4770      	bx	lr

08000a9e <__sfputs_r>:
 8000a9e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000aa0:	4606      	mov	r6, r0
 8000aa2:	460f      	mov	r7, r1
 8000aa4:	4614      	mov	r4, r2
 8000aa6:	18d5      	adds	r5, r2, r3
 8000aa8:	42ac      	cmp	r4, r5
 8000aaa:	d101      	bne.n	8000ab0 <__sfputs_r+0x12>
 8000aac:	2000      	movs	r0, #0
 8000aae:	e007      	b.n	8000ac0 <__sfputs_r+0x22>
 8000ab0:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ab4:	463a      	mov	r2, r7
 8000ab6:	4630      	mov	r0, r6
 8000ab8:	f7ff ffdc 	bl	8000a74 <__sfputc_r>
 8000abc:	1c43      	adds	r3, r0, #1
 8000abe:	d1f3      	bne.n	8000aa8 <__sfputs_r+0xa>
 8000ac0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000ac4 <_vfiprintf_r>:
 8000ac4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000ac8:	460d      	mov	r5, r1
 8000aca:	b09d      	sub	sp, #116	; 0x74
 8000acc:	4614      	mov	r4, r2
 8000ace:	4698      	mov	r8, r3
 8000ad0:	4606      	mov	r6, r0
 8000ad2:	b118      	cbz	r0, 8000adc <_vfiprintf_r+0x18>
 8000ad4:	6a03      	ldr	r3, [r0, #32]
 8000ad6:	b90b      	cbnz	r3, 8000adc <_vfiprintf_r+0x18>
 8000ad8:	f7ff fdd0 	bl	800067c <__sinit>
 8000adc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000ade:	07d9      	lsls	r1, r3, #31
 8000ae0:	d405      	bmi.n	8000aee <_vfiprintf_r+0x2a>
 8000ae2:	89ab      	ldrh	r3, [r5, #12]
 8000ae4:	059a      	lsls	r2, r3, #22
 8000ae6:	d402      	bmi.n	8000aee <_vfiprintf_r+0x2a>
 8000ae8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000aea:	f7ff fecb 	bl	8000884 <__retarget_lock_acquire_recursive>
 8000aee:	89ab      	ldrh	r3, [r5, #12]
 8000af0:	071b      	lsls	r3, r3, #28
 8000af2:	d501      	bpl.n	8000af8 <_vfiprintf_r+0x34>
 8000af4:	692b      	ldr	r3, [r5, #16]
 8000af6:	b99b      	cbnz	r3, 8000b20 <_vfiprintf_r+0x5c>
 8000af8:	4629      	mov	r1, r5
 8000afa:	4630      	mov	r0, r6
 8000afc:	f000 fb74 	bl	80011e8 <__swsetup_r>
 8000b00:	b170      	cbz	r0, 8000b20 <_vfiprintf_r+0x5c>
 8000b02:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000b04:	07dc      	lsls	r4, r3, #31
 8000b06:	d504      	bpl.n	8000b12 <_vfiprintf_r+0x4e>
 8000b08:	f04f 30ff 	mov.w	r0, #4294967295
 8000b0c:	b01d      	add	sp, #116	; 0x74
 8000b0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000b12:	89ab      	ldrh	r3, [r5, #12]
 8000b14:	0598      	lsls	r0, r3, #22
 8000b16:	d4f7      	bmi.n	8000b08 <_vfiprintf_r+0x44>
 8000b18:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000b1a:	f7ff feb4 	bl	8000886 <__retarget_lock_release_recursive>
 8000b1e:	e7f3      	b.n	8000b08 <_vfiprintf_r+0x44>
 8000b20:	2300      	movs	r3, #0
 8000b22:	9309      	str	r3, [sp, #36]	; 0x24
 8000b24:	2320      	movs	r3, #32
 8000b26:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000b2a:	f8cd 800c 	str.w	r8, [sp, #12]
 8000b2e:	2330      	movs	r3, #48	; 0x30
 8000b30:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000ce4 <_vfiprintf_r+0x220>
 8000b34:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000b38:	f04f 0901 	mov.w	r9, #1
 8000b3c:	4623      	mov	r3, r4
 8000b3e:	469a      	mov	sl, r3
 8000b40:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000b44:	b10a      	cbz	r2, 8000b4a <_vfiprintf_r+0x86>
 8000b46:	2a25      	cmp	r2, #37	; 0x25
 8000b48:	d1f9      	bne.n	8000b3e <_vfiprintf_r+0x7a>
 8000b4a:	ebba 0b04 	subs.w	fp, sl, r4
 8000b4e:	d00b      	beq.n	8000b68 <_vfiprintf_r+0xa4>
 8000b50:	465b      	mov	r3, fp
 8000b52:	4622      	mov	r2, r4
 8000b54:	4629      	mov	r1, r5
 8000b56:	4630      	mov	r0, r6
 8000b58:	f7ff ffa1 	bl	8000a9e <__sfputs_r>
 8000b5c:	3001      	adds	r0, #1
 8000b5e:	f000 80a9 	beq.w	8000cb4 <_vfiprintf_r+0x1f0>
 8000b62:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000b64:	445a      	add	r2, fp
 8000b66:	9209      	str	r2, [sp, #36]	; 0x24
 8000b68:	f89a 3000 	ldrb.w	r3, [sl]
 8000b6c:	2b00      	cmp	r3, #0
 8000b6e:	f000 80a1 	beq.w	8000cb4 <_vfiprintf_r+0x1f0>
 8000b72:	2300      	movs	r3, #0
 8000b74:	f04f 32ff 	mov.w	r2, #4294967295
 8000b78:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000b7c:	f10a 0a01 	add.w	sl, sl, #1
 8000b80:	9304      	str	r3, [sp, #16]
 8000b82:	9307      	str	r3, [sp, #28]
 8000b84:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000b88:	931a      	str	r3, [sp, #104]	; 0x68
 8000b8a:	4654      	mov	r4, sl
 8000b8c:	2205      	movs	r2, #5
 8000b8e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b92:	4854      	ldr	r0, [pc, #336]	; (8000ce4 <_vfiprintf_r+0x220>)
 8000b94:	f7ff fb2c 	bl	80001f0 <memchr>
 8000b98:	9a04      	ldr	r2, [sp, #16]
 8000b9a:	b9d8      	cbnz	r0, 8000bd4 <_vfiprintf_r+0x110>
 8000b9c:	06d1      	lsls	r1, r2, #27
 8000b9e:	bf44      	itt	mi
 8000ba0:	2320      	movmi	r3, #32
 8000ba2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000ba6:	0713      	lsls	r3, r2, #28
 8000ba8:	bf44      	itt	mi
 8000baa:	232b      	movmi	r3, #43	; 0x2b
 8000bac:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000bb0:	f89a 3000 	ldrb.w	r3, [sl]
 8000bb4:	2b2a      	cmp	r3, #42	; 0x2a
 8000bb6:	d015      	beq.n	8000be4 <_vfiprintf_r+0x120>
 8000bb8:	9a07      	ldr	r2, [sp, #28]
 8000bba:	4654      	mov	r4, sl
 8000bbc:	2000      	movs	r0, #0
 8000bbe:	f04f 0c0a 	mov.w	ip, #10
 8000bc2:	4621      	mov	r1, r4
 8000bc4:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000bc8:	3b30      	subs	r3, #48	; 0x30
 8000bca:	2b09      	cmp	r3, #9
 8000bcc:	d94d      	bls.n	8000c6a <_vfiprintf_r+0x1a6>
 8000bce:	b1b0      	cbz	r0, 8000bfe <_vfiprintf_r+0x13a>
 8000bd0:	9207      	str	r2, [sp, #28]
 8000bd2:	e014      	b.n	8000bfe <_vfiprintf_r+0x13a>
 8000bd4:	eba0 0308 	sub.w	r3, r0, r8
 8000bd8:	fa09 f303 	lsl.w	r3, r9, r3
 8000bdc:	4313      	orrs	r3, r2
 8000bde:	9304      	str	r3, [sp, #16]
 8000be0:	46a2      	mov	sl, r4
 8000be2:	e7d2      	b.n	8000b8a <_vfiprintf_r+0xc6>
 8000be4:	9b03      	ldr	r3, [sp, #12]
 8000be6:	1d19      	adds	r1, r3, #4
 8000be8:	681b      	ldr	r3, [r3, #0]
 8000bea:	9103      	str	r1, [sp, #12]
 8000bec:	2b00      	cmp	r3, #0
 8000bee:	bfbb      	ittet	lt
 8000bf0:	425b      	neglt	r3, r3
 8000bf2:	f042 0202 	orrlt.w	r2, r2, #2
 8000bf6:	9307      	strge	r3, [sp, #28]
 8000bf8:	9307      	strlt	r3, [sp, #28]
 8000bfa:	bfb8      	it	lt
 8000bfc:	9204      	strlt	r2, [sp, #16]
 8000bfe:	7823      	ldrb	r3, [r4, #0]
 8000c00:	2b2e      	cmp	r3, #46	; 0x2e
 8000c02:	d10c      	bne.n	8000c1e <_vfiprintf_r+0x15a>
 8000c04:	7863      	ldrb	r3, [r4, #1]
 8000c06:	2b2a      	cmp	r3, #42	; 0x2a
 8000c08:	d134      	bne.n	8000c74 <_vfiprintf_r+0x1b0>
 8000c0a:	9b03      	ldr	r3, [sp, #12]
 8000c0c:	1d1a      	adds	r2, r3, #4
 8000c0e:	681b      	ldr	r3, [r3, #0]
 8000c10:	9203      	str	r2, [sp, #12]
 8000c12:	2b00      	cmp	r3, #0
 8000c14:	bfb8      	it	lt
 8000c16:	f04f 33ff 	movlt.w	r3, #4294967295
 8000c1a:	3402      	adds	r4, #2
 8000c1c:	9305      	str	r3, [sp, #20]
 8000c1e:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8000ce8 <_vfiprintf_r+0x224>
 8000c22:	7821      	ldrb	r1, [r4, #0]
 8000c24:	2203      	movs	r2, #3
 8000c26:	4650      	mov	r0, sl
 8000c28:	f7ff fae2 	bl	80001f0 <memchr>
 8000c2c:	b138      	cbz	r0, 8000c3e <_vfiprintf_r+0x17a>
 8000c2e:	9b04      	ldr	r3, [sp, #16]
 8000c30:	eba0 000a 	sub.w	r0, r0, sl
 8000c34:	2240      	movs	r2, #64	; 0x40
 8000c36:	4082      	lsls	r2, r0
 8000c38:	4313      	orrs	r3, r2
 8000c3a:	3401      	adds	r4, #1
 8000c3c:	9304      	str	r3, [sp, #16]
 8000c3e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c42:	482a      	ldr	r0, [pc, #168]	; (8000cec <_vfiprintf_r+0x228>)
 8000c44:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000c48:	2206      	movs	r2, #6
 8000c4a:	f7ff fad1 	bl	80001f0 <memchr>
 8000c4e:	2800      	cmp	r0, #0
 8000c50:	d03f      	beq.n	8000cd2 <_vfiprintf_r+0x20e>
 8000c52:	4b27      	ldr	r3, [pc, #156]	; (8000cf0 <_vfiprintf_r+0x22c>)
 8000c54:	bb1b      	cbnz	r3, 8000c9e <_vfiprintf_r+0x1da>
 8000c56:	9b03      	ldr	r3, [sp, #12]
 8000c58:	3307      	adds	r3, #7
 8000c5a:	f023 0307 	bic.w	r3, r3, #7
 8000c5e:	3308      	adds	r3, #8
 8000c60:	9303      	str	r3, [sp, #12]
 8000c62:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000c64:	443b      	add	r3, r7
 8000c66:	9309      	str	r3, [sp, #36]	; 0x24
 8000c68:	e768      	b.n	8000b3c <_vfiprintf_r+0x78>
 8000c6a:	fb0c 3202 	mla	r2, ip, r2, r3
 8000c6e:	460c      	mov	r4, r1
 8000c70:	2001      	movs	r0, #1
 8000c72:	e7a6      	b.n	8000bc2 <_vfiprintf_r+0xfe>
 8000c74:	2300      	movs	r3, #0
 8000c76:	3401      	adds	r4, #1
 8000c78:	9305      	str	r3, [sp, #20]
 8000c7a:	4619      	mov	r1, r3
 8000c7c:	f04f 0c0a 	mov.w	ip, #10
 8000c80:	4620      	mov	r0, r4
 8000c82:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000c86:	3a30      	subs	r2, #48	; 0x30
 8000c88:	2a09      	cmp	r2, #9
 8000c8a:	d903      	bls.n	8000c94 <_vfiprintf_r+0x1d0>
 8000c8c:	2b00      	cmp	r3, #0
 8000c8e:	d0c6      	beq.n	8000c1e <_vfiprintf_r+0x15a>
 8000c90:	9105      	str	r1, [sp, #20]
 8000c92:	e7c4      	b.n	8000c1e <_vfiprintf_r+0x15a>
 8000c94:	fb0c 2101 	mla	r1, ip, r1, r2
 8000c98:	4604      	mov	r4, r0
 8000c9a:	2301      	movs	r3, #1
 8000c9c:	e7f0      	b.n	8000c80 <_vfiprintf_r+0x1bc>
 8000c9e:	ab03      	add	r3, sp, #12
 8000ca0:	9300      	str	r3, [sp, #0]
 8000ca2:	462a      	mov	r2, r5
 8000ca4:	4b13      	ldr	r3, [pc, #76]	; (8000cf4 <_vfiprintf_r+0x230>)
 8000ca6:	a904      	add	r1, sp, #16
 8000ca8:	4630      	mov	r0, r6
 8000caa:	f3af 8000 	nop.w
 8000cae:	4607      	mov	r7, r0
 8000cb0:	1c78      	adds	r0, r7, #1
 8000cb2:	d1d6      	bne.n	8000c62 <_vfiprintf_r+0x19e>
 8000cb4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000cb6:	07d9      	lsls	r1, r3, #31
 8000cb8:	d405      	bmi.n	8000cc6 <_vfiprintf_r+0x202>
 8000cba:	89ab      	ldrh	r3, [r5, #12]
 8000cbc:	059a      	lsls	r2, r3, #22
 8000cbe:	d402      	bmi.n	8000cc6 <_vfiprintf_r+0x202>
 8000cc0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000cc2:	f7ff fde0 	bl	8000886 <__retarget_lock_release_recursive>
 8000cc6:	89ab      	ldrh	r3, [r5, #12]
 8000cc8:	065b      	lsls	r3, r3, #25
 8000cca:	f53f af1d 	bmi.w	8000b08 <_vfiprintf_r+0x44>
 8000cce:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000cd0:	e71c      	b.n	8000b0c <_vfiprintf_r+0x48>
 8000cd2:	ab03      	add	r3, sp, #12
 8000cd4:	9300      	str	r3, [sp, #0]
 8000cd6:	462a      	mov	r2, r5
 8000cd8:	4b06      	ldr	r3, [pc, #24]	; (8000cf4 <_vfiprintf_r+0x230>)
 8000cda:	a904      	add	r1, sp, #16
 8000cdc:	4630      	mov	r0, r6
 8000cde:	f000 f879 	bl	8000dd4 <_printf_i>
 8000ce2:	e7e4      	b.n	8000cae <_vfiprintf_r+0x1ea>
 8000ce4:	080013f1 	.word	0x080013f1
 8000ce8:	080013f7 	.word	0x080013f7
 8000cec:	080013fb 	.word	0x080013fb
 8000cf0:	00000000 	.word	0x00000000
 8000cf4:	08000a9f 	.word	0x08000a9f

08000cf8 <_printf_common>:
 8000cf8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cfc:	4616      	mov	r6, r2
 8000cfe:	4699      	mov	r9, r3
 8000d00:	688a      	ldr	r2, [r1, #8]
 8000d02:	690b      	ldr	r3, [r1, #16]
 8000d04:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000d08:	4293      	cmp	r3, r2
 8000d0a:	bfb8      	it	lt
 8000d0c:	4613      	movlt	r3, r2
 8000d0e:	6033      	str	r3, [r6, #0]
 8000d10:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000d14:	4607      	mov	r7, r0
 8000d16:	460c      	mov	r4, r1
 8000d18:	b10a      	cbz	r2, 8000d1e <_printf_common+0x26>
 8000d1a:	3301      	adds	r3, #1
 8000d1c:	6033      	str	r3, [r6, #0]
 8000d1e:	6823      	ldr	r3, [r4, #0]
 8000d20:	0699      	lsls	r1, r3, #26
 8000d22:	bf42      	ittt	mi
 8000d24:	6833      	ldrmi	r3, [r6, #0]
 8000d26:	3302      	addmi	r3, #2
 8000d28:	6033      	strmi	r3, [r6, #0]
 8000d2a:	6825      	ldr	r5, [r4, #0]
 8000d2c:	f015 0506 	ands.w	r5, r5, #6
 8000d30:	d106      	bne.n	8000d40 <_printf_common+0x48>
 8000d32:	f104 0a19 	add.w	sl, r4, #25
 8000d36:	68e3      	ldr	r3, [r4, #12]
 8000d38:	6832      	ldr	r2, [r6, #0]
 8000d3a:	1a9b      	subs	r3, r3, r2
 8000d3c:	42ab      	cmp	r3, r5
 8000d3e:	dc26      	bgt.n	8000d8e <_printf_common+0x96>
 8000d40:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000d44:	1e13      	subs	r3, r2, #0
 8000d46:	6822      	ldr	r2, [r4, #0]
 8000d48:	bf18      	it	ne
 8000d4a:	2301      	movne	r3, #1
 8000d4c:	0692      	lsls	r2, r2, #26
 8000d4e:	d42b      	bmi.n	8000da8 <_printf_common+0xb0>
 8000d50:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000d54:	4649      	mov	r1, r9
 8000d56:	4638      	mov	r0, r7
 8000d58:	47c0      	blx	r8
 8000d5a:	3001      	adds	r0, #1
 8000d5c:	d01e      	beq.n	8000d9c <_printf_common+0xa4>
 8000d5e:	6823      	ldr	r3, [r4, #0]
 8000d60:	6922      	ldr	r2, [r4, #16]
 8000d62:	f003 0306 	and.w	r3, r3, #6
 8000d66:	2b04      	cmp	r3, #4
 8000d68:	bf02      	ittt	eq
 8000d6a:	68e5      	ldreq	r5, [r4, #12]
 8000d6c:	6833      	ldreq	r3, [r6, #0]
 8000d6e:	1aed      	subeq	r5, r5, r3
 8000d70:	68a3      	ldr	r3, [r4, #8]
 8000d72:	bf0c      	ite	eq
 8000d74:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000d78:	2500      	movne	r5, #0
 8000d7a:	4293      	cmp	r3, r2
 8000d7c:	bfc4      	itt	gt
 8000d7e:	1a9b      	subgt	r3, r3, r2
 8000d80:	18ed      	addgt	r5, r5, r3
 8000d82:	2600      	movs	r6, #0
 8000d84:	341a      	adds	r4, #26
 8000d86:	42b5      	cmp	r5, r6
 8000d88:	d11a      	bne.n	8000dc0 <_printf_common+0xc8>
 8000d8a:	2000      	movs	r0, #0
 8000d8c:	e008      	b.n	8000da0 <_printf_common+0xa8>
 8000d8e:	2301      	movs	r3, #1
 8000d90:	4652      	mov	r2, sl
 8000d92:	4649      	mov	r1, r9
 8000d94:	4638      	mov	r0, r7
 8000d96:	47c0      	blx	r8
 8000d98:	3001      	adds	r0, #1
 8000d9a:	d103      	bne.n	8000da4 <_printf_common+0xac>
 8000d9c:	f04f 30ff 	mov.w	r0, #4294967295
 8000da0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000da4:	3501      	adds	r5, #1
 8000da6:	e7c6      	b.n	8000d36 <_printf_common+0x3e>
 8000da8:	18e1      	adds	r1, r4, r3
 8000daa:	1c5a      	adds	r2, r3, #1
 8000dac:	2030      	movs	r0, #48	; 0x30
 8000dae:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000db2:	4422      	add	r2, r4
 8000db4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000db8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000dbc:	3302      	adds	r3, #2
 8000dbe:	e7c7      	b.n	8000d50 <_printf_common+0x58>
 8000dc0:	2301      	movs	r3, #1
 8000dc2:	4622      	mov	r2, r4
 8000dc4:	4649      	mov	r1, r9
 8000dc6:	4638      	mov	r0, r7
 8000dc8:	47c0      	blx	r8
 8000dca:	3001      	adds	r0, #1
 8000dcc:	d0e6      	beq.n	8000d9c <_printf_common+0xa4>
 8000dce:	3601      	adds	r6, #1
 8000dd0:	e7d9      	b.n	8000d86 <_printf_common+0x8e>
	...

08000dd4 <_printf_i>:
 8000dd4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000dd8:	7e0f      	ldrb	r7, [r1, #24]
 8000dda:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000ddc:	2f78      	cmp	r7, #120	; 0x78
 8000dde:	4691      	mov	r9, r2
 8000de0:	4680      	mov	r8, r0
 8000de2:	460c      	mov	r4, r1
 8000de4:	469a      	mov	sl, r3
 8000de6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000dea:	d807      	bhi.n	8000dfc <_printf_i+0x28>
 8000dec:	2f62      	cmp	r7, #98	; 0x62
 8000dee:	d80a      	bhi.n	8000e06 <_printf_i+0x32>
 8000df0:	2f00      	cmp	r7, #0
 8000df2:	f000 80d4 	beq.w	8000f9e <_printf_i+0x1ca>
 8000df6:	2f58      	cmp	r7, #88	; 0x58
 8000df8:	f000 80c0 	beq.w	8000f7c <_printf_i+0x1a8>
 8000dfc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000e00:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000e04:	e03a      	b.n	8000e7c <_printf_i+0xa8>
 8000e06:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000e0a:	2b15      	cmp	r3, #21
 8000e0c:	d8f6      	bhi.n	8000dfc <_printf_i+0x28>
 8000e0e:	a101      	add	r1, pc, #4	; (adr r1, 8000e14 <_printf_i+0x40>)
 8000e10:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000e14:	08000e6d 	.word	0x08000e6d
 8000e18:	08000e81 	.word	0x08000e81
 8000e1c:	08000dfd 	.word	0x08000dfd
 8000e20:	08000dfd 	.word	0x08000dfd
 8000e24:	08000dfd 	.word	0x08000dfd
 8000e28:	08000dfd 	.word	0x08000dfd
 8000e2c:	08000e81 	.word	0x08000e81
 8000e30:	08000dfd 	.word	0x08000dfd
 8000e34:	08000dfd 	.word	0x08000dfd
 8000e38:	08000dfd 	.word	0x08000dfd
 8000e3c:	08000dfd 	.word	0x08000dfd
 8000e40:	08000f85 	.word	0x08000f85
 8000e44:	08000ead 	.word	0x08000ead
 8000e48:	08000f3f 	.word	0x08000f3f
 8000e4c:	08000dfd 	.word	0x08000dfd
 8000e50:	08000dfd 	.word	0x08000dfd
 8000e54:	08000fa7 	.word	0x08000fa7
 8000e58:	08000dfd 	.word	0x08000dfd
 8000e5c:	08000ead 	.word	0x08000ead
 8000e60:	08000dfd 	.word	0x08000dfd
 8000e64:	08000dfd 	.word	0x08000dfd
 8000e68:	08000f47 	.word	0x08000f47
 8000e6c:	682b      	ldr	r3, [r5, #0]
 8000e6e:	1d1a      	adds	r2, r3, #4
 8000e70:	681b      	ldr	r3, [r3, #0]
 8000e72:	602a      	str	r2, [r5, #0]
 8000e74:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000e78:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000e7c:	2301      	movs	r3, #1
 8000e7e:	e09f      	b.n	8000fc0 <_printf_i+0x1ec>
 8000e80:	6820      	ldr	r0, [r4, #0]
 8000e82:	682b      	ldr	r3, [r5, #0]
 8000e84:	0607      	lsls	r7, r0, #24
 8000e86:	f103 0104 	add.w	r1, r3, #4
 8000e8a:	6029      	str	r1, [r5, #0]
 8000e8c:	d501      	bpl.n	8000e92 <_printf_i+0xbe>
 8000e8e:	681e      	ldr	r6, [r3, #0]
 8000e90:	e003      	b.n	8000e9a <_printf_i+0xc6>
 8000e92:	0646      	lsls	r6, r0, #25
 8000e94:	d5fb      	bpl.n	8000e8e <_printf_i+0xba>
 8000e96:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000e9a:	2e00      	cmp	r6, #0
 8000e9c:	da03      	bge.n	8000ea6 <_printf_i+0xd2>
 8000e9e:	232d      	movs	r3, #45	; 0x2d
 8000ea0:	4276      	negs	r6, r6
 8000ea2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000ea6:	485a      	ldr	r0, [pc, #360]	; (8001010 <_printf_i+0x23c>)
 8000ea8:	230a      	movs	r3, #10
 8000eaa:	e012      	b.n	8000ed2 <_printf_i+0xfe>
 8000eac:	682b      	ldr	r3, [r5, #0]
 8000eae:	6820      	ldr	r0, [r4, #0]
 8000eb0:	1d19      	adds	r1, r3, #4
 8000eb2:	6029      	str	r1, [r5, #0]
 8000eb4:	0605      	lsls	r5, r0, #24
 8000eb6:	d501      	bpl.n	8000ebc <_printf_i+0xe8>
 8000eb8:	681e      	ldr	r6, [r3, #0]
 8000eba:	e002      	b.n	8000ec2 <_printf_i+0xee>
 8000ebc:	0641      	lsls	r1, r0, #25
 8000ebe:	d5fb      	bpl.n	8000eb8 <_printf_i+0xe4>
 8000ec0:	881e      	ldrh	r6, [r3, #0]
 8000ec2:	4853      	ldr	r0, [pc, #332]	; (8001010 <_printf_i+0x23c>)
 8000ec4:	2f6f      	cmp	r7, #111	; 0x6f
 8000ec6:	bf0c      	ite	eq
 8000ec8:	2308      	moveq	r3, #8
 8000eca:	230a      	movne	r3, #10
 8000ecc:	2100      	movs	r1, #0
 8000ece:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000ed2:	6865      	ldr	r5, [r4, #4]
 8000ed4:	60a5      	str	r5, [r4, #8]
 8000ed6:	2d00      	cmp	r5, #0
 8000ed8:	bfa2      	ittt	ge
 8000eda:	6821      	ldrge	r1, [r4, #0]
 8000edc:	f021 0104 	bicge.w	r1, r1, #4
 8000ee0:	6021      	strge	r1, [r4, #0]
 8000ee2:	b90e      	cbnz	r6, 8000ee8 <_printf_i+0x114>
 8000ee4:	2d00      	cmp	r5, #0
 8000ee6:	d04b      	beq.n	8000f80 <_printf_i+0x1ac>
 8000ee8:	4615      	mov	r5, r2
 8000eea:	fbb6 f1f3 	udiv	r1, r6, r3
 8000eee:	fb03 6711 	mls	r7, r3, r1, r6
 8000ef2:	5dc7      	ldrb	r7, [r0, r7]
 8000ef4:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000ef8:	4637      	mov	r7, r6
 8000efa:	42bb      	cmp	r3, r7
 8000efc:	460e      	mov	r6, r1
 8000efe:	d9f4      	bls.n	8000eea <_printf_i+0x116>
 8000f00:	2b08      	cmp	r3, #8
 8000f02:	d10b      	bne.n	8000f1c <_printf_i+0x148>
 8000f04:	6823      	ldr	r3, [r4, #0]
 8000f06:	07de      	lsls	r6, r3, #31
 8000f08:	d508      	bpl.n	8000f1c <_printf_i+0x148>
 8000f0a:	6923      	ldr	r3, [r4, #16]
 8000f0c:	6861      	ldr	r1, [r4, #4]
 8000f0e:	4299      	cmp	r1, r3
 8000f10:	bfde      	ittt	le
 8000f12:	2330      	movle	r3, #48	; 0x30
 8000f14:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000f18:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000f1c:	1b52      	subs	r2, r2, r5
 8000f1e:	6122      	str	r2, [r4, #16]
 8000f20:	f8cd a000 	str.w	sl, [sp]
 8000f24:	464b      	mov	r3, r9
 8000f26:	aa03      	add	r2, sp, #12
 8000f28:	4621      	mov	r1, r4
 8000f2a:	4640      	mov	r0, r8
 8000f2c:	f7ff fee4 	bl	8000cf8 <_printf_common>
 8000f30:	3001      	adds	r0, #1
 8000f32:	d14a      	bne.n	8000fca <_printf_i+0x1f6>
 8000f34:	f04f 30ff 	mov.w	r0, #4294967295
 8000f38:	b004      	add	sp, #16
 8000f3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f3e:	6823      	ldr	r3, [r4, #0]
 8000f40:	f043 0320 	orr.w	r3, r3, #32
 8000f44:	6023      	str	r3, [r4, #0]
 8000f46:	4833      	ldr	r0, [pc, #204]	; (8001014 <_printf_i+0x240>)
 8000f48:	2778      	movs	r7, #120	; 0x78
 8000f4a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000f4e:	6823      	ldr	r3, [r4, #0]
 8000f50:	6829      	ldr	r1, [r5, #0]
 8000f52:	061f      	lsls	r7, r3, #24
 8000f54:	f851 6b04 	ldr.w	r6, [r1], #4
 8000f58:	d402      	bmi.n	8000f60 <_printf_i+0x18c>
 8000f5a:	065f      	lsls	r7, r3, #25
 8000f5c:	bf48      	it	mi
 8000f5e:	b2b6      	uxthmi	r6, r6
 8000f60:	07df      	lsls	r7, r3, #31
 8000f62:	bf48      	it	mi
 8000f64:	f043 0320 	orrmi.w	r3, r3, #32
 8000f68:	6029      	str	r1, [r5, #0]
 8000f6a:	bf48      	it	mi
 8000f6c:	6023      	strmi	r3, [r4, #0]
 8000f6e:	b91e      	cbnz	r6, 8000f78 <_printf_i+0x1a4>
 8000f70:	6823      	ldr	r3, [r4, #0]
 8000f72:	f023 0320 	bic.w	r3, r3, #32
 8000f76:	6023      	str	r3, [r4, #0]
 8000f78:	2310      	movs	r3, #16
 8000f7a:	e7a7      	b.n	8000ecc <_printf_i+0xf8>
 8000f7c:	4824      	ldr	r0, [pc, #144]	; (8001010 <_printf_i+0x23c>)
 8000f7e:	e7e4      	b.n	8000f4a <_printf_i+0x176>
 8000f80:	4615      	mov	r5, r2
 8000f82:	e7bd      	b.n	8000f00 <_printf_i+0x12c>
 8000f84:	682b      	ldr	r3, [r5, #0]
 8000f86:	6826      	ldr	r6, [r4, #0]
 8000f88:	6961      	ldr	r1, [r4, #20]
 8000f8a:	1d18      	adds	r0, r3, #4
 8000f8c:	6028      	str	r0, [r5, #0]
 8000f8e:	0635      	lsls	r5, r6, #24
 8000f90:	681b      	ldr	r3, [r3, #0]
 8000f92:	d501      	bpl.n	8000f98 <_printf_i+0x1c4>
 8000f94:	6019      	str	r1, [r3, #0]
 8000f96:	e002      	b.n	8000f9e <_printf_i+0x1ca>
 8000f98:	0670      	lsls	r0, r6, #25
 8000f9a:	d5fb      	bpl.n	8000f94 <_printf_i+0x1c0>
 8000f9c:	8019      	strh	r1, [r3, #0]
 8000f9e:	2300      	movs	r3, #0
 8000fa0:	6123      	str	r3, [r4, #16]
 8000fa2:	4615      	mov	r5, r2
 8000fa4:	e7bc      	b.n	8000f20 <_printf_i+0x14c>
 8000fa6:	682b      	ldr	r3, [r5, #0]
 8000fa8:	1d1a      	adds	r2, r3, #4
 8000faa:	602a      	str	r2, [r5, #0]
 8000fac:	681d      	ldr	r5, [r3, #0]
 8000fae:	6862      	ldr	r2, [r4, #4]
 8000fb0:	2100      	movs	r1, #0
 8000fb2:	4628      	mov	r0, r5
 8000fb4:	f7ff f91c 	bl	80001f0 <memchr>
 8000fb8:	b108      	cbz	r0, 8000fbe <_printf_i+0x1ea>
 8000fba:	1b40      	subs	r0, r0, r5
 8000fbc:	6060      	str	r0, [r4, #4]
 8000fbe:	6863      	ldr	r3, [r4, #4]
 8000fc0:	6123      	str	r3, [r4, #16]
 8000fc2:	2300      	movs	r3, #0
 8000fc4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000fc8:	e7aa      	b.n	8000f20 <_printf_i+0x14c>
 8000fca:	6923      	ldr	r3, [r4, #16]
 8000fcc:	462a      	mov	r2, r5
 8000fce:	4649      	mov	r1, r9
 8000fd0:	4640      	mov	r0, r8
 8000fd2:	47d0      	blx	sl
 8000fd4:	3001      	adds	r0, #1
 8000fd6:	d0ad      	beq.n	8000f34 <_printf_i+0x160>
 8000fd8:	6823      	ldr	r3, [r4, #0]
 8000fda:	079b      	lsls	r3, r3, #30
 8000fdc:	d413      	bmi.n	8001006 <_printf_i+0x232>
 8000fde:	68e0      	ldr	r0, [r4, #12]
 8000fe0:	9b03      	ldr	r3, [sp, #12]
 8000fe2:	4298      	cmp	r0, r3
 8000fe4:	bfb8      	it	lt
 8000fe6:	4618      	movlt	r0, r3
 8000fe8:	e7a6      	b.n	8000f38 <_printf_i+0x164>
 8000fea:	2301      	movs	r3, #1
 8000fec:	4632      	mov	r2, r6
 8000fee:	4649      	mov	r1, r9
 8000ff0:	4640      	mov	r0, r8
 8000ff2:	47d0      	blx	sl
 8000ff4:	3001      	adds	r0, #1
 8000ff6:	d09d      	beq.n	8000f34 <_printf_i+0x160>
 8000ff8:	3501      	adds	r5, #1
 8000ffa:	68e3      	ldr	r3, [r4, #12]
 8000ffc:	9903      	ldr	r1, [sp, #12]
 8000ffe:	1a5b      	subs	r3, r3, r1
 8001000:	42ab      	cmp	r3, r5
 8001002:	dcf2      	bgt.n	8000fea <_printf_i+0x216>
 8001004:	e7eb      	b.n	8000fde <_printf_i+0x20a>
 8001006:	2500      	movs	r5, #0
 8001008:	f104 0619 	add.w	r6, r4, #25
 800100c:	e7f5      	b.n	8000ffa <_printf_i+0x226>
 800100e:	bf00      	nop
 8001010:	08001402 	.word	0x08001402
 8001014:	08001413 	.word	0x08001413

08001018 <__sflush_r>:
 8001018:	898a      	ldrh	r2, [r1, #12]
 800101a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800101c:	4605      	mov	r5, r0
 800101e:	0710      	lsls	r0, r2, #28
 8001020:	460c      	mov	r4, r1
 8001022:	d457      	bmi.n	80010d4 <__sflush_r+0xbc>
 8001024:	684b      	ldr	r3, [r1, #4]
 8001026:	2b00      	cmp	r3, #0
 8001028:	dc04      	bgt.n	8001034 <__sflush_r+0x1c>
 800102a:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800102c:	2b00      	cmp	r3, #0
 800102e:	dc01      	bgt.n	8001034 <__sflush_r+0x1c>
 8001030:	2000      	movs	r0, #0
 8001032:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001034:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001036:	2e00      	cmp	r6, #0
 8001038:	d0fa      	beq.n	8001030 <__sflush_r+0x18>
 800103a:	2300      	movs	r3, #0
 800103c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001040:	682f      	ldr	r7, [r5, #0]
 8001042:	6a21      	ldr	r1, [r4, #32]
 8001044:	602b      	str	r3, [r5, #0]
 8001046:	d032      	beq.n	80010ae <__sflush_r+0x96>
 8001048:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800104a:	89a3      	ldrh	r3, [r4, #12]
 800104c:	075a      	lsls	r2, r3, #29
 800104e:	d505      	bpl.n	800105c <__sflush_r+0x44>
 8001050:	6863      	ldr	r3, [r4, #4]
 8001052:	1ac0      	subs	r0, r0, r3
 8001054:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001056:	b10b      	cbz	r3, 800105c <__sflush_r+0x44>
 8001058:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800105a:	1ac0      	subs	r0, r0, r3
 800105c:	2300      	movs	r3, #0
 800105e:	4602      	mov	r2, r0
 8001060:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001062:	6a21      	ldr	r1, [r4, #32]
 8001064:	4628      	mov	r0, r5
 8001066:	47b0      	blx	r6
 8001068:	1c43      	adds	r3, r0, #1
 800106a:	89a3      	ldrh	r3, [r4, #12]
 800106c:	d106      	bne.n	800107c <__sflush_r+0x64>
 800106e:	6829      	ldr	r1, [r5, #0]
 8001070:	291d      	cmp	r1, #29
 8001072:	d82b      	bhi.n	80010cc <__sflush_r+0xb4>
 8001074:	4a28      	ldr	r2, [pc, #160]	; (8001118 <__sflush_r+0x100>)
 8001076:	410a      	asrs	r2, r1
 8001078:	07d6      	lsls	r6, r2, #31
 800107a:	d427      	bmi.n	80010cc <__sflush_r+0xb4>
 800107c:	2200      	movs	r2, #0
 800107e:	6062      	str	r2, [r4, #4]
 8001080:	04d9      	lsls	r1, r3, #19
 8001082:	6922      	ldr	r2, [r4, #16]
 8001084:	6022      	str	r2, [r4, #0]
 8001086:	d504      	bpl.n	8001092 <__sflush_r+0x7a>
 8001088:	1c42      	adds	r2, r0, #1
 800108a:	d101      	bne.n	8001090 <__sflush_r+0x78>
 800108c:	682b      	ldr	r3, [r5, #0]
 800108e:	b903      	cbnz	r3, 8001092 <__sflush_r+0x7a>
 8001090:	6560      	str	r0, [r4, #84]	; 0x54
 8001092:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001094:	602f      	str	r7, [r5, #0]
 8001096:	2900      	cmp	r1, #0
 8001098:	d0ca      	beq.n	8001030 <__sflush_r+0x18>
 800109a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800109e:	4299      	cmp	r1, r3
 80010a0:	d002      	beq.n	80010a8 <__sflush_r+0x90>
 80010a2:	4628      	mov	r0, r5
 80010a4:	f7ff fbf0 	bl	8000888 <_free_r>
 80010a8:	2000      	movs	r0, #0
 80010aa:	6360      	str	r0, [r4, #52]	; 0x34
 80010ac:	e7c1      	b.n	8001032 <__sflush_r+0x1a>
 80010ae:	2301      	movs	r3, #1
 80010b0:	4628      	mov	r0, r5
 80010b2:	47b0      	blx	r6
 80010b4:	1c41      	adds	r1, r0, #1
 80010b6:	d1c8      	bne.n	800104a <__sflush_r+0x32>
 80010b8:	682b      	ldr	r3, [r5, #0]
 80010ba:	2b00      	cmp	r3, #0
 80010bc:	d0c5      	beq.n	800104a <__sflush_r+0x32>
 80010be:	2b1d      	cmp	r3, #29
 80010c0:	d001      	beq.n	80010c6 <__sflush_r+0xae>
 80010c2:	2b16      	cmp	r3, #22
 80010c4:	d101      	bne.n	80010ca <__sflush_r+0xb2>
 80010c6:	602f      	str	r7, [r5, #0]
 80010c8:	e7b2      	b.n	8001030 <__sflush_r+0x18>
 80010ca:	89a3      	ldrh	r3, [r4, #12]
 80010cc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80010d0:	81a3      	strh	r3, [r4, #12]
 80010d2:	e7ae      	b.n	8001032 <__sflush_r+0x1a>
 80010d4:	690f      	ldr	r7, [r1, #16]
 80010d6:	2f00      	cmp	r7, #0
 80010d8:	d0aa      	beq.n	8001030 <__sflush_r+0x18>
 80010da:	0793      	lsls	r3, r2, #30
 80010dc:	680e      	ldr	r6, [r1, #0]
 80010de:	bf08      	it	eq
 80010e0:	694b      	ldreq	r3, [r1, #20]
 80010e2:	600f      	str	r7, [r1, #0]
 80010e4:	bf18      	it	ne
 80010e6:	2300      	movne	r3, #0
 80010e8:	1bf6      	subs	r6, r6, r7
 80010ea:	608b      	str	r3, [r1, #8]
 80010ec:	2e00      	cmp	r6, #0
 80010ee:	dd9f      	ble.n	8001030 <__sflush_r+0x18>
 80010f0:	6a21      	ldr	r1, [r4, #32]
 80010f2:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 80010f6:	4633      	mov	r3, r6
 80010f8:	463a      	mov	r2, r7
 80010fa:	4628      	mov	r0, r5
 80010fc:	47e0      	blx	ip
 80010fe:	2800      	cmp	r0, #0
 8001100:	dc06      	bgt.n	8001110 <__sflush_r+0xf8>
 8001102:	89a3      	ldrh	r3, [r4, #12]
 8001104:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001108:	81a3      	strh	r3, [r4, #12]
 800110a:	f04f 30ff 	mov.w	r0, #4294967295
 800110e:	e790      	b.n	8001032 <__sflush_r+0x1a>
 8001110:	4407      	add	r7, r0
 8001112:	1a36      	subs	r6, r6, r0
 8001114:	e7ea      	b.n	80010ec <__sflush_r+0xd4>
 8001116:	bf00      	nop
 8001118:	dfbffffe 	.word	0xdfbffffe

0800111c <_fflush_r>:
 800111c:	b538      	push	{r3, r4, r5, lr}
 800111e:	690b      	ldr	r3, [r1, #16]
 8001120:	4605      	mov	r5, r0
 8001122:	460c      	mov	r4, r1
 8001124:	b913      	cbnz	r3, 800112c <_fflush_r+0x10>
 8001126:	2500      	movs	r5, #0
 8001128:	4628      	mov	r0, r5
 800112a:	bd38      	pop	{r3, r4, r5, pc}
 800112c:	b118      	cbz	r0, 8001136 <_fflush_r+0x1a>
 800112e:	6a03      	ldr	r3, [r0, #32]
 8001130:	b90b      	cbnz	r3, 8001136 <_fflush_r+0x1a>
 8001132:	f7ff faa3 	bl	800067c <__sinit>
 8001136:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800113a:	2b00      	cmp	r3, #0
 800113c:	d0f3      	beq.n	8001126 <_fflush_r+0xa>
 800113e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001140:	07d0      	lsls	r0, r2, #31
 8001142:	d404      	bmi.n	800114e <_fflush_r+0x32>
 8001144:	0599      	lsls	r1, r3, #22
 8001146:	d402      	bmi.n	800114e <_fflush_r+0x32>
 8001148:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800114a:	f7ff fb9b 	bl	8000884 <__retarget_lock_acquire_recursive>
 800114e:	4628      	mov	r0, r5
 8001150:	4621      	mov	r1, r4
 8001152:	f7ff ff61 	bl	8001018 <__sflush_r>
 8001156:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001158:	07da      	lsls	r2, r3, #31
 800115a:	4605      	mov	r5, r0
 800115c:	d4e4      	bmi.n	8001128 <_fflush_r+0xc>
 800115e:	89a3      	ldrh	r3, [r4, #12]
 8001160:	059b      	lsls	r3, r3, #22
 8001162:	d4e1      	bmi.n	8001128 <_fflush_r+0xc>
 8001164:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001166:	f7ff fb8e 	bl	8000886 <__retarget_lock_release_recursive>
 800116a:	e7dd      	b.n	8001128 <_fflush_r+0xc>

0800116c <__swbuf_r>:
 800116c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800116e:	460e      	mov	r6, r1
 8001170:	4614      	mov	r4, r2
 8001172:	4605      	mov	r5, r0
 8001174:	b118      	cbz	r0, 800117e <__swbuf_r+0x12>
 8001176:	6a03      	ldr	r3, [r0, #32]
 8001178:	b90b      	cbnz	r3, 800117e <__swbuf_r+0x12>
 800117a:	f7ff fa7f 	bl	800067c <__sinit>
 800117e:	69a3      	ldr	r3, [r4, #24]
 8001180:	60a3      	str	r3, [r4, #8]
 8001182:	89a3      	ldrh	r3, [r4, #12]
 8001184:	071a      	lsls	r2, r3, #28
 8001186:	d525      	bpl.n	80011d4 <__swbuf_r+0x68>
 8001188:	6923      	ldr	r3, [r4, #16]
 800118a:	b31b      	cbz	r3, 80011d4 <__swbuf_r+0x68>
 800118c:	6823      	ldr	r3, [r4, #0]
 800118e:	6922      	ldr	r2, [r4, #16]
 8001190:	1a98      	subs	r0, r3, r2
 8001192:	6963      	ldr	r3, [r4, #20]
 8001194:	b2f6      	uxtb	r6, r6
 8001196:	4283      	cmp	r3, r0
 8001198:	4637      	mov	r7, r6
 800119a:	dc04      	bgt.n	80011a6 <__swbuf_r+0x3a>
 800119c:	4621      	mov	r1, r4
 800119e:	4628      	mov	r0, r5
 80011a0:	f7ff ffbc 	bl	800111c <_fflush_r>
 80011a4:	b9e0      	cbnz	r0, 80011e0 <__swbuf_r+0x74>
 80011a6:	68a3      	ldr	r3, [r4, #8]
 80011a8:	3b01      	subs	r3, #1
 80011aa:	60a3      	str	r3, [r4, #8]
 80011ac:	6823      	ldr	r3, [r4, #0]
 80011ae:	1c5a      	adds	r2, r3, #1
 80011b0:	6022      	str	r2, [r4, #0]
 80011b2:	701e      	strb	r6, [r3, #0]
 80011b4:	6962      	ldr	r2, [r4, #20]
 80011b6:	1c43      	adds	r3, r0, #1
 80011b8:	429a      	cmp	r2, r3
 80011ba:	d004      	beq.n	80011c6 <__swbuf_r+0x5a>
 80011bc:	89a3      	ldrh	r3, [r4, #12]
 80011be:	07db      	lsls	r3, r3, #31
 80011c0:	d506      	bpl.n	80011d0 <__swbuf_r+0x64>
 80011c2:	2e0a      	cmp	r6, #10
 80011c4:	d104      	bne.n	80011d0 <__swbuf_r+0x64>
 80011c6:	4621      	mov	r1, r4
 80011c8:	4628      	mov	r0, r5
 80011ca:	f7ff ffa7 	bl	800111c <_fflush_r>
 80011ce:	b938      	cbnz	r0, 80011e0 <__swbuf_r+0x74>
 80011d0:	4638      	mov	r0, r7
 80011d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80011d4:	4621      	mov	r1, r4
 80011d6:	4628      	mov	r0, r5
 80011d8:	f000 f806 	bl	80011e8 <__swsetup_r>
 80011dc:	2800      	cmp	r0, #0
 80011de:	d0d5      	beq.n	800118c <__swbuf_r+0x20>
 80011e0:	f04f 37ff 	mov.w	r7, #4294967295
 80011e4:	e7f4      	b.n	80011d0 <__swbuf_r+0x64>
	...

080011e8 <__swsetup_r>:
 80011e8:	b538      	push	{r3, r4, r5, lr}
 80011ea:	4b2a      	ldr	r3, [pc, #168]	; (8001294 <__swsetup_r+0xac>)
 80011ec:	4605      	mov	r5, r0
 80011ee:	6818      	ldr	r0, [r3, #0]
 80011f0:	460c      	mov	r4, r1
 80011f2:	b118      	cbz	r0, 80011fc <__swsetup_r+0x14>
 80011f4:	6a03      	ldr	r3, [r0, #32]
 80011f6:	b90b      	cbnz	r3, 80011fc <__swsetup_r+0x14>
 80011f8:	f7ff fa40 	bl	800067c <__sinit>
 80011fc:	89a3      	ldrh	r3, [r4, #12]
 80011fe:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001202:	0718      	lsls	r0, r3, #28
 8001204:	d422      	bmi.n	800124c <__swsetup_r+0x64>
 8001206:	06d9      	lsls	r1, r3, #27
 8001208:	d407      	bmi.n	800121a <__swsetup_r+0x32>
 800120a:	2309      	movs	r3, #9
 800120c:	602b      	str	r3, [r5, #0]
 800120e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001212:	81a3      	strh	r3, [r4, #12]
 8001214:	f04f 30ff 	mov.w	r0, #4294967295
 8001218:	e034      	b.n	8001284 <__swsetup_r+0x9c>
 800121a:	0758      	lsls	r0, r3, #29
 800121c:	d512      	bpl.n	8001244 <__swsetup_r+0x5c>
 800121e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001220:	b141      	cbz	r1, 8001234 <__swsetup_r+0x4c>
 8001222:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001226:	4299      	cmp	r1, r3
 8001228:	d002      	beq.n	8001230 <__swsetup_r+0x48>
 800122a:	4628      	mov	r0, r5
 800122c:	f7ff fb2c 	bl	8000888 <_free_r>
 8001230:	2300      	movs	r3, #0
 8001232:	6363      	str	r3, [r4, #52]	; 0x34
 8001234:	89a3      	ldrh	r3, [r4, #12]
 8001236:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800123a:	81a3      	strh	r3, [r4, #12]
 800123c:	2300      	movs	r3, #0
 800123e:	6063      	str	r3, [r4, #4]
 8001240:	6923      	ldr	r3, [r4, #16]
 8001242:	6023      	str	r3, [r4, #0]
 8001244:	89a3      	ldrh	r3, [r4, #12]
 8001246:	f043 0308 	orr.w	r3, r3, #8
 800124a:	81a3      	strh	r3, [r4, #12]
 800124c:	6923      	ldr	r3, [r4, #16]
 800124e:	b94b      	cbnz	r3, 8001264 <__swsetup_r+0x7c>
 8001250:	89a3      	ldrh	r3, [r4, #12]
 8001252:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001256:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800125a:	d003      	beq.n	8001264 <__swsetup_r+0x7c>
 800125c:	4621      	mov	r1, r4
 800125e:	4628      	mov	r0, r5
 8001260:	f000 f850 	bl	8001304 <__smakebuf_r>
 8001264:	89a0      	ldrh	r0, [r4, #12]
 8001266:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800126a:	f010 0301 	ands.w	r3, r0, #1
 800126e:	d00a      	beq.n	8001286 <__swsetup_r+0x9e>
 8001270:	2300      	movs	r3, #0
 8001272:	60a3      	str	r3, [r4, #8]
 8001274:	6963      	ldr	r3, [r4, #20]
 8001276:	425b      	negs	r3, r3
 8001278:	61a3      	str	r3, [r4, #24]
 800127a:	6923      	ldr	r3, [r4, #16]
 800127c:	b943      	cbnz	r3, 8001290 <__swsetup_r+0xa8>
 800127e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8001282:	d1c4      	bne.n	800120e <__swsetup_r+0x26>
 8001284:	bd38      	pop	{r3, r4, r5, pc}
 8001286:	0781      	lsls	r1, r0, #30
 8001288:	bf58      	it	pl
 800128a:	6963      	ldrpl	r3, [r4, #20]
 800128c:	60a3      	str	r3, [r4, #8]
 800128e:	e7f4      	b.n	800127a <__swsetup_r+0x92>
 8001290:	2000      	movs	r0, #0
 8001292:	e7f7      	b.n	8001284 <__swsetup_r+0x9c>
 8001294:	20000070 	.word	0x20000070

08001298 <_sbrk_r>:
 8001298:	b538      	push	{r3, r4, r5, lr}
 800129a:	4d06      	ldr	r5, [pc, #24]	; (80012b4 <_sbrk_r+0x1c>)
 800129c:	2300      	movs	r3, #0
 800129e:	4604      	mov	r4, r0
 80012a0:	4608      	mov	r0, r1
 80012a2:	602b      	str	r3, [r5, #0]
 80012a4:	f7ff f884 	bl	80003b0 <_sbrk>
 80012a8:	1c43      	adds	r3, r0, #1
 80012aa:	d102      	bne.n	80012b2 <_sbrk_r+0x1a>
 80012ac:	682b      	ldr	r3, [r5, #0]
 80012ae:	b103      	cbz	r3, 80012b2 <_sbrk_r+0x1a>
 80012b0:	6023      	str	r3, [r4, #0]
 80012b2:	bd38      	pop	{r3, r4, r5, pc}
 80012b4:	200001d8 	.word	0x200001d8

080012b8 <__swhatbuf_r>:
 80012b8:	b570      	push	{r4, r5, r6, lr}
 80012ba:	460c      	mov	r4, r1
 80012bc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012c0:	2900      	cmp	r1, #0
 80012c2:	b096      	sub	sp, #88	; 0x58
 80012c4:	4615      	mov	r5, r2
 80012c6:	461e      	mov	r6, r3
 80012c8:	da0d      	bge.n	80012e6 <__swhatbuf_r+0x2e>
 80012ca:	89a3      	ldrh	r3, [r4, #12]
 80012cc:	f013 0f80 	tst.w	r3, #128	; 0x80
 80012d0:	f04f 0100 	mov.w	r1, #0
 80012d4:	bf0c      	ite	eq
 80012d6:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80012da:	2340      	movne	r3, #64	; 0x40
 80012dc:	2000      	movs	r0, #0
 80012de:	6031      	str	r1, [r6, #0]
 80012e0:	602b      	str	r3, [r5, #0]
 80012e2:	b016      	add	sp, #88	; 0x58
 80012e4:	bd70      	pop	{r4, r5, r6, pc}
 80012e6:	466a      	mov	r2, sp
 80012e8:	f000 f848 	bl	800137c <_fstat_r>
 80012ec:	2800      	cmp	r0, #0
 80012ee:	dbec      	blt.n	80012ca <__swhatbuf_r+0x12>
 80012f0:	9901      	ldr	r1, [sp, #4]
 80012f2:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80012f6:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80012fa:	4259      	negs	r1, r3
 80012fc:	4159      	adcs	r1, r3
 80012fe:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001302:	e7eb      	b.n	80012dc <__swhatbuf_r+0x24>

08001304 <__smakebuf_r>:
 8001304:	898b      	ldrh	r3, [r1, #12]
 8001306:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001308:	079d      	lsls	r5, r3, #30
 800130a:	4606      	mov	r6, r0
 800130c:	460c      	mov	r4, r1
 800130e:	d507      	bpl.n	8001320 <__smakebuf_r+0x1c>
 8001310:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001314:	6023      	str	r3, [r4, #0]
 8001316:	6123      	str	r3, [r4, #16]
 8001318:	2301      	movs	r3, #1
 800131a:	6163      	str	r3, [r4, #20]
 800131c:	b002      	add	sp, #8
 800131e:	bd70      	pop	{r4, r5, r6, pc}
 8001320:	ab01      	add	r3, sp, #4
 8001322:	466a      	mov	r2, sp
 8001324:	f7ff ffc8 	bl	80012b8 <__swhatbuf_r>
 8001328:	9900      	ldr	r1, [sp, #0]
 800132a:	4605      	mov	r5, r0
 800132c:	4630      	mov	r0, r6
 800132e:	f7ff fb15 	bl	800095c <_malloc_r>
 8001332:	b948      	cbnz	r0, 8001348 <__smakebuf_r+0x44>
 8001334:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001338:	059a      	lsls	r2, r3, #22
 800133a:	d4ef      	bmi.n	800131c <__smakebuf_r+0x18>
 800133c:	f023 0303 	bic.w	r3, r3, #3
 8001340:	f043 0302 	orr.w	r3, r3, #2
 8001344:	81a3      	strh	r3, [r4, #12]
 8001346:	e7e3      	b.n	8001310 <__smakebuf_r+0xc>
 8001348:	89a3      	ldrh	r3, [r4, #12]
 800134a:	6020      	str	r0, [r4, #0]
 800134c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001350:	81a3      	strh	r3, [r4, #12]
 8001352:	9b00      	ldr	r3, [sp, #0]
 8001354:	6163      	str	r3, [r4, #20]
 8001356:	9b01      	ldr	r3, [sp, #4]
 8001358:	6120      	str	r0, [r4, #16]
 800135a:	b15b      	cbz	r3, 8001374 <__smakebuf_r+0x70>
 800135c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001360:	4630      	mov	r0, r6
 8001362:	f000 f81d 	bl	80013a0 <_isatty_r>
 8001366:	b128      	cbz	r0, 8001374 <__smakebuf_r+0x70>
 8001368:	89a3      	ldrh	r3, [r4, #12]
 800136a:	f023 0303 	bic.w	r3, r3, #3
 800136e:	f043 0301 	orr.w	r3, r3, #1
 8001372:	81a3      	strh	r3, [r4, #12]
 8001374:	89a3      	ldrh	r3, [r4, #12]
 8001376:	431d      	orrs	r5, r3
 8001378:	81a5      	strh	r5, [r4, #12]
 800137a:	e7cf      	b.n	800131c <__smakebuf_r+0x18>

0800137c <_fstat_r>:
 800137c:	b538      	push	{r3, r4, r5, lr}
 800137e:	4d07      	ldr	r5, [pc, #28]	; (800139c <_fstat_r+0x20>)
 8001380:	2300      	movs	r3, #0
 8001382:	4604      	mov	r4, r0
 8001384:	4608      	mov	r0, r1
 8001386:	4611      	mov	r1, r2
 8001388:	602b      	str	r3, [r5, #0]
 800138a:	f7fe ffeb 	bl	8000364 <_fstat>
 800138e:	1c43      	adds	r3, r0, #1
 8001390:	d102      	bne.n	8001398 <_fstat_r+0x1c>
 8001392:	682b      	ldr	r3, [r5, #0]
 8001394:	b103      	cbz	r3, 8001398 <_fstat_r+0x1c>
 8001396:	6023      	str	r3, [r4, #0]
 8001398:	bd38      	pop	{r3, r4, r5, pc}
 800139a:	bf00      	nop
 800139c:	200001d8 	.word	0x200001d8

080013a0 <_isatty_r>:
 80013a0:	b538      	push	{r3, r4, r5, lr}
 80013a2:	4d06      	ldr	r5, [pc, #24]	; (80013bc <_isatty_r+0x1c>)
 80013a4:	2300      	movs	r3, #0
 80013a6:	4604      	mov	r4, r0
 80013a8:	4608      	mov	r0, r1
 80013aa:	602b      	str	r3, [r5, #0]
 80013ac:	f7fe ffe9 	bl	8000382 <_isatty>
 80013b0:	1c43      	adds	r3, r0, #1
 80013b2:	d102      	bne.n	80013ba <_isatty_r+0x1a>
 80013b4:	682b      	ldr	r3, [r5, #0]
 80013b6:	b103      	cbz	r3, 80013ba <_isatty_r+0x1a>
 80013b8:	6023      	str	r3, [r4, #0]
 80013ba:	bd38      	pop	{r3, r4, r5, pc}
 80013bc:	200001d8 	.word	0x200001d8

080013c0 <_init>:
 80013c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013c2:	bf00      	nop
 80013c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013c6:	bc08      	pop	{r3}
 80013c8:	469e      	mov	lr, r3
 80013ca:	4770      	bx	lr

080013cc <_fini>:
 80013cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013ce:	bf00      	nop
 80013d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013d2:	bc08      	pop	{r3}
 80013d4:	469e      	mov	lr, r3
 80013d6:	4770      	bx	lr
